class combatant{
    constructor(layer,battle,x,y,type,team,id){
        this.layer=layer
		this.battle=battle
        this.position={x:x,y:y}
        this.type=type
        this.team=team
		this.id=id
        this.size=1
		this.flip=1-this.team*2
		this.direction=0
        this.name=types.combatant[this.type].name
        this.alt=types.combatant[this.type].alt
        this.life=types.combatant[this.type].life
		this.height=types.combatant[this.type].height
		this.behavior=types.combatant[this.type].behavior
        this.attacks=copyList(types.combatant[this.type].attacks)
		this.damage=copyList(types.combatant[this.type].damage)
		this.altAttack=copyList(types.combatant[this.type].altAttack)
		this.class=types.combatant[this.type].class
		this.buff=types.combatant[this.type].buff
		this.base={life:this.life,position:{x:this.position.x,y:this.position.y},meter:10,meterControl:10}
        this.collect={life:this.life,block:0}
		this.calc={damage:0,block:0}
		this.boost={main:[0,0,0,0,0],fade:[0,0,0,0,0],display:[],color:[[200,0,0],[0,150,255],[0,50,150],[100,255,100],[255,150,0]],name:['Attack','Defense','Block','Focus','Lock']}
		this.status={main:[],fade:[],display:[],color:[
			[255,125,0],[200,225,250],[150,0,0],[255,75,0],[200,125,50],[40,80,120],[120,200,120],[125,75,25],[25,125,175],[150,225,150],
			[100,200,200],[200,0,50],[100,50,150],[50,100,50],[20,60,120],[170,240,255],[235,65,15],[210,200,245],[210,90,0],[50,0,0],
			[255,200,255],[125,160,160],[200,25,125],[190,190,60],[225,225,75],[255,50,100],[150,150,50],[255,125,25],[255,175,75],[200,125,250],
			[240,100,50],[150,175,200],[0,100,255],[200,255,255],[225,255,225],[140,160,190],[200,150,200],[100,200,50],[255,200,180],[40,80,180],
			[170,190,210],[255,75,150],[50,125,205],[175,225,175],[150,225,150],[255,105,0],[125,50,125],[140,160,180],[80,40,80],[138,141,207],
			[139,150,193],[40,95,160],[255,245,15],[195,225,255],[145,155,65],[245,195,65],[240,255,255],[220,240,220],[215,235,255],[20,50,120],
			[155,235,250],[5,145,250],[150,0,0],[215,210,210],[100,75,150],[255,75,175],[225,175,225],[40,80,120],[255,195,255],[235,125,230],
			[120,90,120],[60,120,60],[40,80,40],[230,170,230],[225,225,200],[155,180,190],[105,230,255],[40,180,185],[240,175,5],[200,175,110],
			[140,160,0],[60,30,60],[255,225,255],[150,200,150],[255,200,255],[255,150,255],[200,150,200],[150,25,25],[225,210,135],[255,75,0],
			[100,200,200],[100,100,100],[80,40,0],[180,180,30],[255,100,50],[240,240,60],[255,225,195],[180,180,100],[150,25,25],[150,25,25],
			[200,125,50],[200,180,160],[120,200,60],[80,100,140],[255,150,50],[255,200,50],[255,200,255],[240,220,200],[255,255,0],[150,50,25],
			[150,50,25],[150,50,25],[255,180,150],[255,255,70],[10,125,230],[250,175,100],[240,120,0],[105,90,105],[145,235,255],[245,185,85],
			[30,5,45],[145,195,210],[105,70,100],[150,220,230],[80,30,35],[80,40,60],[240,180,0],[40,80,20],[120,80,160],[100,50,175],
			[70,10,105],[180,120,200],[200,40,160],[150,200,150],[255,200,255],[150,250,200],[160,230,245],[150,220,235],[140,210,225],[240,220,40],
			[20,10,25],[50,255,50],[255,50,50],[255,240,150],[255,50,125],[200,75,150],[75,100,50],[111,114,178],[88,82,128],[165,185,205],
			[150,50,25],[150,50,25],[150,50,25],[150,50,25],[150,50,25],[140,160,180],[255,255,50],
		],name:[
			'Counter All','Next Turn Energy','Double Damage','Counter Once','Next Turn Strength','Downed','Dodge','Next Turn Weakness','Next Turn Frailness','Stun',
			'Reflect','Bleed','Intangible','Turn Strength On Hit','Smite Per Turn','Stance Change Block','Enter Wrath Draw','Every Block Weak All','Next Attack Damage','Die Next Turn',
			'Faith Gain','Shiv Gain','Card Play Damage All Enemies','Card Play Block','Must Act','Add Bleed Turn','Push Boost','Counter Bleed Once','Counter Push Once','Energy on Hit',
			'First Attack Damage','Next Turn Block','Next Turn Dexterity','Buffer','Intangible','Armor','Control','Poison','Regeneration','Strength Per Turn',
			'Metallicize','Add Bleed Once','Weak Per Turn','Counter Stun','Stun','Counter All 3 Times','Exhaust Draw','Block Store','Death Heal','Rearm Next Turn',
			'Armed Block Per Turn','Energy And Strength Per Hit','Return Played to Draw','Power Draw','Random Common','Passive Orb','Discharge','Power Basic Charge','Random Power','Conditioning',
			'Miracle+ Gain','Calm Block Per Turn','Constant Damage Down','Shiv Damage','No Blocks','Counter Pull Once','Counter Throw','Downed','Scry Per Turn','Scry Block',
			'Attack Per Card Played','Take Per Turn','Energy Gen Down','Next Turn Wrath','Next Turn Draw','Insight Per Turn','Free Attack','Grant Block on Hit','Energy Per Turn','Retain Cost Decrease',
			'Lose Focus','Dark Charge on Death','Balance Buffer','Counter Stun Once','Resolve Per Turn','Resolve on Block','Debalance','Temporary Constant Damage','Retain Buffs','Counter Once',
			'Reflect','Construct Health Maintain','Stat Change Immunity','Lose Combo','Counter Twice','Combo Build','Attack Draw','Combo on Block','Temporary Constant Damage Down','Temporary Constant Damage Down',
			'Next Turn Strength','Build Per Turn','Next Turn Dodge','Build on Hit','Burn','Counter Burn','Sleep','Take Credit','5 Card Damage All','Bomb 1',
			'Bomb 2','Bomb 3','Mark','End Turn Damage All','Upgrade Added','Extra Turn','Counter All This Combat','Take Damage Per Card Played','Free Card','No Draw',
			'Explode on Death','Turn Double Damage','Next Turn Double Damage','Turn Discard','Lose Dexterity','Status or Curse Damage All','Block Damage All','Shiv on Damage','Play Shiv Draw','Next Turn Intangible',
			'13 Card Damage All and Block','Triple Block','Block Gain Damage','Anti-Control','Endure','First Cost 2+ Card Energy','Stance Change Damage All','Stance Change Draw','Stance Change Random Cost Decrease','End Turn Block Attack',
			'Dark Gain Increase','Basic Charge Per Turn','Basic Charges Act as Explosive','Lightning Passive Increase','Add Bleed','Bleed All Per Turn','Strength on Hit','Permanent Armed','10 Damage First When Armed','Metallicize Per Turn',
			'Bomb 4','Bomb 5','Bomb 6','Bomb 7','Bomb 8','Basic Armor','Stolen Gold',
		],class:[
			1,1,1,1,1,0,1,0,0,0,
			1,0,1,1,1,1,1,1,1,1,
			1,1,1,1,0,1,1,1,1,1,
			1,1,1,1,1,1,1,0,1,1,
			1,1,0,1,0,1,1,1,1,1,
			1,1,1,1,1,1,1,1,1,1,
			1,1,0,1,0,1,1,0,1,1,
			1,0,0,1,1,1,1,0,1,1,
			0,1,1,1,1,1,0,1,1,1,
			1,1,1,0,1,1,1,1,0,0,
			1,1,1,1,0,1,0,1,1,1,
			1,1,0,1,1,1,1,0,1,0,
			0,1,1,0,0,1,1,1,1,1,
			1,1,1,0,1,1,1,1,1,1,
			1,1,1,1,1,1,1,1,1,1,
			1,1,1,1,1,1,1,
		]}
		this.combo=0
		this.stance=0
		this.mantra=0
		this.ammo=[-1,-1,-1]
		this.ammoDetail=[0,0,0]
		this.meter=0
		this.armed=1
		this.flower=0
		this.anim=[0,0,0,0,0]
		for(g=0;g<this.status.name.length;g++){
			this.status.main.push(0)
			this.status.fade.push(0)
		}
		this.block=0
		this.fades={block:0,info:0}
		this.intent=0
		this.blocked=0
        this.fade=0
		this.lastPlay=-1
		this.built=0
		this.uniqueDisplay=[]
		this.remember={int:0,boost:[]}
		for(g=0,lg=this.boost.main.length;g<lg;g++){
			this.remember.boost.push(this.boost.main[g])
		}
		this.setupIntent(-1)
		if((stage.ascend>=2&&this.battle.random.class==0||stage.ascend>=3&&this.battle.random.class==1||stage.ascend>=4&&this.battle.random.class==2)&&this.team==1){
			for(let e=0,le=this.attacks.length;e<le;e++){
				if(types.attack[this.attacks[e]].class==0&&this.attacks[e]!=36){
					this.damage[e]=round(this.damage[e]*1.2)
				}
			}
		}
		if(this.id==0&&this.team==0&&stage.ascend>=6){
			this.life-=round(this.base.life/5)
		}
		if((stage.ascend>=7&&this.battle.random.class==0||stage.ascend>=8&&this.battle.random.class==1||stage.ascend>=9&&this.battle.random.class==2)&&this.team==1){
			this.base.life=round(this.base.life*12)/10
			this.life=round(this.life*12)/10
			for(let e=0,le=this.attacks.length;e<le;e++){
				if(types.attack[this.attacks[e]].class==2){
					this.damage[e]=round(this.damage[e]*1.2)
				}
			}
		}
		if(this.id==0&&this.team==0&&stage.ascend>=14){
			this.base.life-=round(this.base.life/10)
		}
		if((stage.ascend>=17&&this.battle.random.class==0||stage.ascend>=18&&this.battle.random.class==1||stage.ascend>=19&&this.battle.random.class==2)&&this.team==1){
			for(let e=0,le=this.attacks.length;e<le;e++){
				if(types.attack[this.attacks[e]].class==0&&this.altAttack[e]>0){
					this.altAttack[e]=round(this.altAttack[e]*1.5)
				}
			}
			for(let e=0,le=this.attacks.length;e<le;e++){
				if(types.attack[this.attacks[e]].class==1){
					this.damage[e]=round(this.damage[e]*1.5)
				}
			}
		}
    }
	resetUnique(){
		this.block=0
		this.combo=0
		this.stance=0
		this.mantra=0
		this.ammo=[-1,-1,-1]
		this.ammoDetail=[0,0,0]
		this.meter=0
		this.base.meter=this.base.meterControl
		this.armed=1
		this.flower=0
		this.lastPlay=-1
		this.uniqueDisplay=[]
	}
	initialBuff(){
		this.standardBuff()
		switch(this.buff){
			case 4:
				this.status.main[70]=2
			break
			case 5:
				this.addBlock(20,0)
				this.status.main[47]=99
			break
			case 8:
				this.status.main[39]=1
				this.status.main[88]=1
			break
			case 9:
				this.block+=12
			break
			case 10:
				this.status.main[70]=4
			break
			case 11:
				this.status.main[31]=8
			break
			case 12:
				this.status.main[4]=2
			break
			case 13:
				this.status.main[116]=1
			break
			case 14:
				this.status.main[116]=2
			break
			case 15:
				this.status.main[45]=1
			break
			case 17:
				this.status.main[154]=100
			break
			case 18:
				this.status.main[155]=5
				this.block==5
			break
			case 19:
				this.status.main[31]=12
			break
			case 20:
				this.status.main[36]=1
			break
			case 21:
				this.status.main[12]=1
			break
		}
	}
	turnBuff(){
		this.standardBuff()
	}
	standardBuff(){
		switch(this.buff){
			case 1:
				this.status.main[36]=1
			break
			case 2:
				this.status.main[3]=4
			break
			case 3:
				this.status.main[6]=1
			break
			case 6:
				this.status.main[13]=1
			break
			case 7:
				this.status.main[3]=6
				this.block+=8
			break
			case 16:
				this.block+=3
			break
		}
	}
	setupIntent(type){
		if(type==-1){
			switch(this.behavior){
				case 0:
					this.intent=floor(random(0,this.attacks.length))
				break
				case 1:
					if(this.battle.counter.turn==0){
						this.intent=this.attacks.length-1
					}else{
						this.intent=floor(random(0,this.attacks.length-1))
					}
				break
				case 2:
					if(this.battle.counter.turn==0){
						this.intent=this.attacks.length-1
					}else{
						this.intent=floor(random(0,this.attacks.length))
					}
				break
				case 3:
					if(this.battle.counter.turn==0){
						this.intent=this.attacks.length-1
					}else if(this.battle.counter.turn==1){
						this.intent=this.attacks.length-2
					}else if(this.battle.counter.turn%7==6){
						this.intent=this.attacks.length-3
					}else{
						this.intent=floor(random(0,this.attacks.length-3))
					}
				break
				case 4:
					this.intent=this.battle.counter.turn%this.attacks.length
				break
				case 5:
					if(this.battle.counter.turn%this.attacks.length>=2){
						this.intent=this.battle.counter.turn%this.attacks.length
					}else{
						this.intent=floor(random(0,2))
					}
				break
			}
		}else{
			this.intent=type
		}
	}
    display(detail){
		if(this.fade>0){
			this.layer.translate(this.position.x,this.position.y)
			this.layer.rotate(this.direction)
			this.layer.scale(this.size*this.flip,this.size)
			if(this.team==0&&detail==0){
				this.layer.translate(0,-45)
				if(this.stance!=0||this.type==2){
					this.layer.noStroke()
					if(this.mantra>0&&detail==0){
						this.layer.fill(255,200,255,this.fade/2)
						for(g=0;g<12;g++){
							this.layer.rotate(30)
							if(g<this.mantra){
								this.layer.ellipse(0,-40,6,6)
							}
						}
					}
					if(this.stance>0&&detail==0){
						switch(this.stance){
							case 1:
								this.layer.fill(150,255,255,this.fade/2)
							break
							case 2:
								this.layer.fill(255,75,75,this.fade/2)
							break
							case 3:
								this.layer.fill(255,200,255,this.fade/2)
							break
						}
						for(g=0;g<12;g++){
							this.layer.rotate(30)
							this.layer.triangle(0,-8,-8,0,-50,-50)
						}
					}
				}
				if(!this.armed&&this.type!=4){
					this.layer.noFill()
					this.layer.stroke(100,this.fade/2)
					this.layer.strokeWeight(10)
					this.layer.ellipse(0,0,50,50)
				}
				if(this.flower>0){
					this.layer.fill(255,200,255,this.fade/2)
					for(g=0;g<12;g++){
						this.layer.rotate(90)
						if(g<this.flower){
							this.layer.triangle(0,0,-40,-60,-60,-40)
						}
					}
					this.layer.image(graphics.minor[3],-40*this.fade,-40*this.fade,80*this.fade,80*this.fade)
				}
				this.layer.translate(0,45)
			}
			this.layer.noStroke()
			switch(this.type){
				case 1:
					this.layer.stroke(25,30,30,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(30,35,35,this.fade)
					this.layer.line(-6,-50,-15,-25)
					this.layer.line(6,-50,15,-25)
					this.layer.noStroke()
					this.layer.fill(35,40,40,this.fade)
					this.layer.ellipse(0,-48,18,44)
					this.layer.fill(30,25,0,this.fade)
					this.layer.rect(-7,-46,5,2)
					this.layer.rect(0,-46,5,2)
					this.layer.rect(7,-46,5,2)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-80,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-77,4,4)
					this.layer.ellipse(12,-77,4,4)
					this.layer.fill(30,35,35,this.fade)
					this.layer.arc(0,-80,36,36,-180,0)
					this.layer.fill(200,this.fade/2)
					this.layer.rect(8,-77,20,6)
				break
				case 2:
					this.layer.noStroke()
					this.layer.fill(84,46,55,this.fade)
					this.layer.triangle(-15,-75,15,-75,-6,-25)
					this.layer.stroke(207,90,101,this.fade*(1-this.anim[4]))
					this.layer.strokeWeight(0.5)
					this.layer.line(-3,-59,1,-54)
					this.layer.line(3,-59,1,-54)
					this.layer.arc(0,-59,6,3,-180,0)
					this.layer.stroke(190,120,123,this.fade)
					this.layer.strokeWeight(1)
					this.layer.line(-15,-75,-13,-55)
					this.layer.line(-15,-75,-17,-55)
					this.layer.noStroke()
					this.layer.fill(121,164,194,this.fade)
					this.layer.triangle(-8,-30,8,-30,-10,-4)
					this.layer.fill(127,131,167,this.fade)
					this.layer.triangle(-8,-30,8,-30,-7,-14)
					this.layer.fill(254,238,223,this.fade)
					this.layer.ellipse(0,-46,12,30)
					this.layer.stroke(255,235,217,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-3,-54,-12,-24)
					this.layer.line(3,-54,12,-24)
					this.layer.line(-3,-32,-8,0)
					this.layer.line(3,-32,8+0*3,0)
					this.layer.noStroke()
					this.layer.fill(255,239,224,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.stroke(175,121,123,this.fade)
					this.layer.strokeWeight(4-this.anim[0]*3)
					this.layer.line(4+this.anim[0]*2,-72,4-this.anim[0],-72-this.anim[0]*2)
					this.layer.line(4+this.anim[0]*2,-72,4-this.anim[0],-72+this.anim[0]*2)
					this.layer.line(12-this.anim[0]*2,-72,12+this.anim[0],-72-this.anim[0]*2)
					this.layer.line(12-this.anim[0]*2,-72,12+this.anim[0],-72+this.anim[0]*2)
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(3-this.anim[0]*2)
					this.layer.line(4+this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,4-this.anim[0]+0.2-this.anim[0]*0.2,-72-this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(4+this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,4-this.anim[0]+0.2-this.anim[0]*0.2,-72+this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(12-this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,12+this.anim[0]+0.2-this.anim[0]*0.2,-72-this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(12-this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,12+this.anim[0]+0.2-this.anim[0]*0.2,-72+this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.noStroke()
					this.layer.fill(125,75,90,this.fade)
					this.layer.rect(0,-54.5,10,1)
					this.layer.fill(108,76,87,this.fade)
					this.layer.beginShape()
					this.layer.vertex(-5,-54)
					this.layer.vertex(5,-54)
					for(g=0;g<11;g++){
						this.layer.vertex(10.4-g*1.8,-26-g*g/8)
					}
					this.layer.endShape()
					this.layer.fill(73,64,78,this.fade)
					this.layer.beginShape()
					this.layer.vertex(5,-54)
					this.layer.vertex(-5,-54)
					for(g=0;g<11;g++){
						this.layer.vertex(-10.4+g*1.9,-26-g*g/8)
					}
					this.layer.endShape()
					this.layer.fill(175,117,125,this.fade)
					this.layer.beginShape()
					this.layer.vertex(-5,-54)
					this.layer.vertex(5,-54)
					for(g=0;g<11;g++){
						this.layer.vertex(9.4-g*1.5,-38-g*g/8)
					}
					this.layer.endShape()
					this.layer.fill(169,155,182,this.fade)
					this.layer.beginShape()
					this.layer.vertex(5,-54)
					this.layer.vertex(-5,-54)
					for(g=0;g<11;g++){
						this.layer.vertex(-9.4+g*1.6,-38-g*g/8)
					}
					this.layer.endShape()
					this.layer.noFill()
					this.layer.stroke(185,103,161,this.fade)
					this.layer.strokeWeight(0.5)
					this.layer.ellipse(-0.5,-58,3,1.5)
					this.layer.ellipse(2.5,-58,3,1.5)
					this.layer.line(1,-58,0,-56)
					this.layer.line(1,-58,2,-56)
					this.layer.ellipse(1,-52,2,2)
					this.layer.line(0,-52.5,-1,-53)
					this.layer.line(2,-52.5,3,-53)
					this.layer.translate(0,-75)
					this.layer.rotate(-30)
					this.layer.noStroke()
					this.layer.fill(184,102,99,this.fade)
					this.layer.triangle(-9,-21,-9,-13,0,-17)
					this.layer.triangle(9,-21,9,-13,0,-17)
					this.layer.rotate(30)
					this.layer.translate(0,75)
					this.layer.fill(128,71,79,this.fade)
					this.layer.arc(0,-75,36,36,-180,0)
					this.layer.fill(255,239,224,this.fade)
					this.layer.triangle(-15,-75,15,-75,9,-85)
					this.layer.fill(128,71,79,this.fade)
					this.layer.triangle(18,-75,12,-80,18,-69)
					this.layer.triangle(15,-85,-12,-85,8,-75)
					this.layer.triangle(-12,-85,6,-85,-3,-73)
					this.layer.triangle(-18,-75,-3,-80,-15,-63)
					this.layer.triangle(-12,-85,-4,-85,-8,-55)
					this.layer.stroke(96,54,66,this.fade)
					this.layer.strokeWeight(1)
					this.layer.line(7,-21,3,-21)
					this.layer.strokeWeight(0.5)
					this.layer.line(5,-21,6,-18)
					this.layer.line(5,-21,4,-18)
				break
				case 3:
					this.layer.noStroke()
					this.layer.fill(40,35,30,this.fade)
					this.layer.quad(-6,-60,6,-60,12,-15,-12,-15)
					this.layer.arc(0,-15,24,12,0,180)
					this.layer.stroke(80,70,60,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(80,70,60,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(100,0,0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.fill(60,50,40,this.fade)
					this.layer.arc(0,-75,36,36,-180,0)
					this.layer.arc(8,-75,52,44,135,180)
					this.layer.arc(8,-75,20,36,0,45)
					this.layer.fill(70,60,50,this.fade)
					this.layer.ellipse(-4,-51,3,3)
					this.layer.ellipse(-4,-46,3,3)
				break
				case 4:
					if((this.armed==1||detail==1)&&this.fade>0){
						this.layer.image(graphics.minor[5],-25*this.fade,-60*this.fade,65*this.fade,65*this.fade)
					}
					this.layer.translate(0,-1.25)
					if(this.anim[1]<1){
						this.layer.translate(-7.9,-0.75)
						this.layer.rotate(-atan2(-3.95,30))
						this.layer.image(graphics.minor[0],-4*(1-this.anim[1])*this.fade,-4*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade)
						this.layer.rotate(atan2(-3.95,30))
						this.layer.translate(15.8,0)
						this.layer.rotate(atan2(-3.95,30))
						this.layer.image(graphics.minor[0],-4*(1-this.anim[1])*this.fade,-4*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade)
						this.layer.rotate(-atan2(-3.95,30))
						this.layer.translate(-7.9,0.75)
					}
					this.layer.noStroke()
					this.layer.fill(243,154,163,this.fade)
					this.layer.triangle(0,-75,18,-75,9,-58)
					this.layer.triangle(-18,-75,18,-75,-10,-59)
					this.layer.triangle(-18,-75,-6,-75,-15,-65)
					this.layer.triangle(18,-75,6,-75,16,-68)
					this.layer.triangle(-18,-75,18,-75,-5,-56)
					this.layer.triangle(-18,-75,15,-75,3,-50)
					if(this.anim[2]<1){
						this.layer.fill(230,186,197,this.fade*(1-this.anim[2]))
						this.layer.translate(-4*cos(0),-51)
						this.layer.rotate(-atan2(-15*cos(0)+this.anim[0]*30+this.anim[1]*36+4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.quad(3,0,-3,0,-3-9*this.anim[1],24+6*this.anim[1],12-9*this.anim[1],30-6*this.anim[1])
						this.layer.rotate(atan2(-15*cos(0)+this.anim[0]*30+this.anim[1]*36+4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.translate(8*cos(0),0)
						this.layer.rotate(-atan2(15*cos(0)+this.anim[0]*15+this.anim[1]*12-4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.quad(3,0,-3,0,-12,30,3,24)
						this.layer.rotate(atan2(15*cos(0)+this.anim[0]*15+this.anim[1]*12-4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.translate(-8*cos(0),0)
						this.layer.fill(235,209,216,this.fade*(1-this.anim[2]))
						this.layer.rotate(-atan2(-15*cos(0)+this.anim[0]*30+this.anim[1]*36+4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.quad(1,0,-1,0,-1-3*this.anim[1],25+3*this.anim[1],4-3*this.anim[1],27-2*this.anim[1])
						this.layer.rotate(atan2(-15*cos(0)+this.anim[0]*30+this.anim[1]*36+4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.translate(8*cos(0),0)
						this.layer.rotate(-atan2(15*cos(0)+this.anim[0]*15+this.anim[1]*12-4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.quad(1,0,-1,0,-4,27,1,25)
						this.layer.rotate(atan2(15*cos(0)+this.anim[0]*15+this.anim[1]*12-4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.translate(-4*cos(0),51)
					}
					this.layer.stroke(207,90,101,this.fade*(1-this.anim[4]))
					this.layer.strokeWeight(0.5)
					this.layer.line(-3,-59,1,-54)
					this.layer.line(3,-59,1,-54)
					this.layer.arc(0,-59,6,3,-180,0)
					this.layer.noStroke()
					this.layer.fill(254,238,223,this.fade)
					this.layer.ellipse(0,-46,12,30)
					this.layer.fill(250,188,173,this.fade)
					this.layer.ellipse(3,-42,0.5,2)
					this.layer.fill(242,205,219,this.fade)
					this.layer.arc(0,-37.5,11,13,0,180)
					this.layer.stroke(255,235,217,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-3,-54,-12,-24)
					this.layer.line(3,-54,12,-24)
					this.layer.strokeWeight(0.8)
					this.layer.stroke(202,51,60,this.fade*(1-this.anim[3]))
					this.layer.fill(209,80,84,this.fade*(1-this.anim[3]))
					this.layer.strokeJoin(ROUND)
					this.layer.triangle(0,-44,-10,-50,-10,-38)
					this.layer.triangle(0,-44,10,-50,10,-38)
					this.layer.strokeJoin(MITER)
					this.layer.strokeWeight(1)
					this.layer.stroke(216,168,182,this.fade*(1-this.anim[4]))
					this.layer.fill(249,218,226,this.fade*(1-this.anim[4]))
					this.layer.beginShape()
					this.layer.vertex(-6,-55)
					this.layer.vertex(6,-55)
					this.layer.vertex(9,-26)
					this.layer.vertex(8,-25)
					this.layer.vertex(-8,-25)
					this.layer.vertex(-9,-26)
					this.layer.endShape()
					this.layer.noStroke()
					this.layer.beginShape()
					this.layer.vertex(-6,-55)
					this.layer.vertex(6,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(10-g*2,-26+(g%2)*3)
					}
					this.layer.endShape()
					this.layer.beginShape()
					this.layer.vertex(-6,-55)
					this.layer.vertex(6,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(10-g*2,-24-(g%2)*3)
					}
					this.layer.endShape()
					this.layer.fill(114,40,119,this.fade*(1-this.anim[4]))
					for(g=0;g<5;g++){
						this.layer.ellipse(8-g*4,-25,0.25,1)
						this.layer.ellipse(8.5-g*4,-25,0.125,0.5)
						this.layer.ellipse(7.5-g*4,-25,0.125,0.5)
					}
					for(g=0;g<4;g++){
						this.layer.ellipse(6-g*4,-25.5,0.125,0.5)
					}
					this.layer.noStroke()
					this.layer.fill(242,205,219,this.fade)
					this.layer.quad(-5.25,-54,5.25,-54,6,-47,-6,-47)
					this.layer.stroke(231,195,205,this.fade)
					this.layer.strokeWeight(0.5)
					this.layer.fill(245,224,231,this.fade)
					for(g=0;g<5;g++){
						this.layer.ellipse(-4+g*2,-53,1.5,2)
					}
					for(g=0;g<6;g++){
						this.layer.ellipse(-5+g*2,-48,1.5,2)
					}
					if(this.anim[2]<1){
						this.layer.noStroke()
						this.layer.fill(249,218,225,this.fade*(1-this.anim[2]))
						this.layer.translate(-4*cos(0),-51)
						this.layer.rotate(-atan2(-15*cos(0)+this.anim[0]*30+this.anim[1]*36+4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.quad(3,0,-3,0,-4,12,4,12)
						this.layer.rotate(atan2(-15*cos(0)+this.anim[0]*30+this.anim[1]*36+4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.translate(8*cos(0),0)
						this.layer.rotate(-atan2(15*cos(0)+this.anim[0]*15+this.anim[1]*12-4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.quad(3,0,-3,0,-4,12,4,12)
						this.layer.rotate(atan2(15*cos(0)+this.anim[0]*15+this.anim[1]*12-4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.translate(-8*cos(0),0)
						this.layer.fill(228,184,195,this.fade*(1-this.anim[2]))
						this.layer.rotate(-atan2(-15*cos(0)+this.anim[0]*30+this.anim[1]*36+4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.quad(1,0,-1,0,-4/3,12,4/3,12)
						this.layer.rotate(atan2(-15*cos(0)+this.anim[0]*30+this.anim[1]*36+4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.translate(8*cos(0),0)
						this.layer.rotate(-atan2(15*cos(0)+this.anim[0]*15+this.anim[1]*12-4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.quad(1,0,-1,0,-4/3,12,4/3,12)
						this.layer.rotate(atan2(15*cos(0)+this.anim[0]*15+this.anim[1]*12-4*cos(0),-24-this.anim[0]*12-this.anim[1]*30+51))
						this.layer.translate(-4*cos(0),51)
					}
					this.layer.stroke(255,235,217,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-3,-32,-8,0)
					this.layer.line(3,-32,8+0*3,0)
					if(this.anim[1]<1){
						this.layer.translate(-7.9,-0.75)
						this.layer.rotate(-atan2(-3.95,30))
						this.layer.image(graphics.minor[1],-4*(1-this.anim[1])*this.fade,-4*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade)
						this.layer.rotate(atan2(-3.95,30))
						this.layer.translate(15.8,0)
						this.layer.rotate(atan2(-3.95,30))
						this.layer.image(graphics.minor[1],-4*(1-this.anim[1])*this.fade,-4*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade)
						this.layer.rotate(-atan2(-3.95,30))
						this.layer.translate(-7.9,0.75)
					}
					this.layer.stroke(231,195,205,this.fade)
					this.layer.strokeWeight(0.5)
					this.layer.fill(245,224,231,this.fade)
					for(g=0;g<6;g++){
						this.layer.ellipse(-5+g*2,-36.5,1.5,2)
					}
					this.layer.noFill()
					this.layer.stroke(172,44,53,this.fade)
					this.layer.strokeWeight(0.5)
					this.layer.ellipse(-1,-53,4,2)
					this.layer.ellipse(3,-53,4,2)
					this.layer.line(1,-53,0,-50)
					this.layer.line(1,-53,2,-50)
					this.layer.stroke(207,90,101,this.fade*(1-this.anim[4]))
					this.layer.strokeWeight(0.5)
					this.layer.line(-3,-59,1,-54)
					this.layer.line(3,-59,1,-54)
					this.layer.noStroke()
					this.layer.fill(250,230,235,this.fade*(1-this.anim[4]))
					this.layer.beginShape()
					this.layer.vertex(-6,-55)
					this.layer.vertex(6,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(10.4-g*2,-26-g+(g%2)*3)
					}
					this.layer.endShape()
					this.layer.beginShape()
					this.layer.vertex(-6,-55)
					this.layer.vertex(6,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(10.4-g*2,-24-g-(g%2)*3)
					}
					this.layer.endShape()
					this.layer.fill(114,40,119,this.fade*(1-this.anim[4]))
					for(g=0;g<5;g++){
						this.layer.ellipse(8.4-g*4,-26-g*2,0.25,1)
						this.layer.ellipse(8.9-g*4,-25.8-g*2,0.125,0.5)
						this.layer.ellipse(7.9-g*4,-26.2-g*2,0.125,0.5)
					}
					for(g=0;g<4;g++){
						this.layer.ellipse(6.35-g*4,-27.5-g*2,0.125,0.5)
					}
					this.layer.fill(251,242,245,this.fade*(1-this.anim[4]))
					this.layer.beginShape()
					this.layer.vertex(6,-55)
					this.layer.vertex(-6,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(-10.4+g*2,-26-g+(g%2)*3)
					}
					this.layer.endShape()
					this.layer.beginShape()
					this.layer.vertex(6,-55)
					this.layer.vertex(-6,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(-10.4+g*2,-24-g-(g%2)*3)
					}
					this.layer.endShape()
					this.layer.fill(114,40,119,this.fade*(1-this.anim[4]))
					for(g=0;g<5;g++){
						this.layer.ellipse(-8.4+g*4,-26-g*2,0.25,1)
						this.layer.ellipse(-8.9+g*4,-25.8-g*2,0.125,0.5)
						this.layer.ellipse(-7.9+g*4,-26.2-g*2,0.125,0.5)
					}
					for(g=0;g<4;g++){
						this.layer.ellipse(-6.35+g*4,-27.5-g*2,0.125,0.5)
					}
					this.layer.fill(255,252,254,this.fade*(1-this.anim[4]))
					this.layer.beginShape()
					this.layer.vertex(-6,-55)
					this.layer.vertex(6,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(9-g*1.8,-36+(g%2)*3)
					}
					this.layer.endShape()
					this.layer.beginShape()
					this.layer.vertex(-6,-55)
					this.layer.vertex(6,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(9-g*1.8,-34-(g%2)*3)
					}
					this.layer.endShape()
					this.layer.noStroke()
					this.layer.fill(242,235,244,this.fade*(1-this.anim[4]))
					for(g=0;g<10;g++){
						this.layer.triangle(9-g*1.8,-39,7.2-g*1.8,-39,8.1-g*1.8,-36)
					}
					this.layer.strokeJoin(ROUND)
					this.layer.strokeWeight(0.8)
					this.layer.stroke(202,51,60,this.fade*(1-this.anim[3]))
					this.layer.fill(209,80,84,this.fade*(1-this.anim[3]))
					this.layer.quad(1,-49,1,-45,6,-54,5,-57)
					this.layer.quad(1,-49,1,-45,-6,-54,-5,-57)
					this.layer.quad(-7.8,-46,7.8,-46,8.2,-44,-8.2,-44)
					this.layer.quad(-8.2,-44,8.2,-44,8.4,-42,-8.4,-42)
					this.layer.rect(5,-40.5,2,3)
					this.layer.noFill()
					this.layer.strokeJoin(MITER)
					this.layer.stroke(158,57,60,this.fade*(1-this.anim[4]))
					this.layer.strokeWeight(0.25)
					this.layer.ellipse(0,-53,2,1)
					this.layer.ellipse(2,-53,2,1)
					this.layer.line(1,-53,0.5,-51.5)
					this.layer.line(1,-53,1.5,-51.5)
					this.layer.noStroke()
					for(g=1;g<6;g++){
						this.layer.fill(206+g*38/3,107+g*59/3,113+g*61/3,this.fade)
						this.layer.quad(13.5-(g%2)*2,-72+g*3,12-(g%2)*2,-66+g*3,10.5-(g%2)*2,-72+g*3,12-(g%2)*2,-78+g*3)
					}
					this.layer.fill(255,239,224,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.stroke(201,108,113,this.fade)
					this.layer.strokeWeight(4-this.anim[0]*3)
					this.layer.line(4+this.anim[0]*2,-72,4-this.anim[0],-72-this.anim[0]*2)
					this.layer.line(4+this.anim[0]*2,-72,4-this.anim[0],-72+this.anim[0]*2)
					this.layer.line(12-this.anim[0]*2,-72,12+this.anim[0],-72-this.anim[0]*2)
					this.layer.line(12-this.anim[0]*2,-72,12+this.anim[0],-72+this.anim[0]*2)
					this.layer.stroke(48,4,7,this.fade)
					this.layer.strokeWeight(3-this.anim[0]*2)
					this.layer.line(4+this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,4-this.anim[0]+0.2-this.anim[0]*0.2,-72-this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(4+this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,4-this.anim[0]+0.2-this.anim[0]*0.2,-72+this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(12-this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,12+this.anim[0]+0.2-this.anim[0]*0.2,-72-this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(12-this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,12+this.anim[0]+0.2-this.anim[0]*0.2,-72+this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.noStroke()
					this.layer.fill(250,211,216,this.fade)
					this.layer.arc(0,-75,36,36,-180,0)
					this.layer.triangle(18,-75,9,-75,18,-72)
					this.layer.triangle(18,-75,15,-75,18,-69)
					this.layer.triangle(-18,-75,9,-75,-18,-69)
					this.layer.triangle(-18,-75,0,-75,-12,-63)
					this.layer.triangle(-18,-75,6,-75,0,-69)
					this.layer.stroke(111,23,27,this.fade)
					this.layer.strokeWeight(0.5)
					this.layer.line(13,-58.5,9,-58.5)
					this.layer.image(graphics.minor[2],-5-15*this.fade,-77.5-22.5*this.fade,30*this.fade,45*this.fade)
					if(this.anim[3]<1){
						this.layer.image(graphics.minor[3],-3-15*(1-this.anim[3])*this.fade,-44-15*(1-this.anim[3])*this.fade,30*(1-this.anim[3])*this.fade,30*(1-this.anim[3])*this.fade)
					}
					this.layer.translate(0,1.25)
				break
				case 5:
					this.layer.noStroke()
					this.layer.fill(230,230,5,this.fade)
					this.layer.ellipse(-10,-8,20,20)
					this.layer.ellipse(10,-8,20,20)
					this.layer.ellipse(-16,-30,20,20)
					this.layer.ellipse(16,-30,20,20)
					this.layer.fill(60,30,15,this.fade)
					this.layer.rect(-16,-30,3,20)
					this.layer.rect(16,-30,3,20)
					this.layer.fill(120,130,130,this.fade)
					this.layer.ellipse(0,-28,24,40)
					this.layer.fill(165,155,45,this.fade)
					this.layer.arc(4,-28,16,40,-90,90)
					this.layer.arc(-4,-28,16,40,90,270)
					this.layer.fill(245,245,65,this.fade)
					this.layer.ellipse(0,-60,40,40)
					this.layer.fill(240,160,20,this.fade)
					this.layer.ellipse(13.5,-52,24,16)
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(1)
					this.layer.arc(13.5,-52,22,2,-180,0)
					this.layer.line(18-3,-56,18-3,-58)
					this.layer.line(18+3,-56,18+3,-58)
					this.layer.strokeWeight(3)
					this.layer.point(9-6,-64)
					this.layer.point(9+6,-64)
					this.layer.noStroke()
					this.layer.fill(150,150,50,this.fade)
					this.layer.arc(0,-64,44,44,-180,0)
					this.layer.rect(20,-66.5,24,5)
				break
				case 6:
					this.layer.noStroke()
					this.layer.fill(10,0,20,this.fade)
					this.layer.triangle(-12,-75,12,-75,-6,-25)
					this.layer.fill(30,0,60,this.fade)
					this.layer.ellipse(0,-46,12,30)
					this.layer.stroke(30,0,60,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-3,-54,-12,-24)
					this.layer.line(3,-54,12,-24)
					this.layer.line(-3,-32,-8,0)
					this.layer.line(3,-32,8+0*3,0)
					this.layer.noStroke()
					this.layer.fill(30,0,60,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.stroke(255,this.fade)
					this.layer.strokeWeight(4-this.anim[0]*3)
					this.layer.line(4+this.anim[0]*2,-72,4-this.anim[0],-72-this.anim[0]*2)
					this.layer.line(4+this.anim[0]*2,-72,4-this.anim[0],-72+this.anim[0]*2)
					this.layer.line(12-this.anim[0]*2,-72,12+this.anim[0],-72-this.anim[0]*2)
					this.layer.line(12-this.anim[0]*2,-72,12+this.anim[0],-72+this.anim[0]*2)
					this.layer.stroke(50,150,200,this.fade)
					this.layer.strokeWeight(3-this.anim[0]*2)
					this.layer.line(4+this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,4-this.anim[0]+0.2-this.anim[0]*0.2,-72-this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(4+this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,4-this.anim[0]+0.2-this.anim[0]*0.2,-72+this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(12-this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,12+this.anim[0]+0.2-this.anim[0]*0.2,-72-this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(12-this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,12+this.anim[0]+0.2-this.anim[0]*0.2,-72+this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.noStroke()
					this.layer.fill(40,0,80,this.fade)
					this.layer.quad(-5,-56,5,-56,9,-24,-9,-24)
				break
				case 7:
					this.layer.stroke(220,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(240,this.fade)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(220,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(240,this.fade)
					this.layer.arc(0,-45,19,36,-180,0)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.fill(50,200,50,this.fade)
					this.layer.rect(-6,-50,1,4)
					this.layer.fill(200,50,50,this.fade)
					this.layer.ellipse(-6,-54,5,5)
					this.layer.fill(100,this.fade)
					this.layer.triangle(4,-53,0,-50,0,-56)
					this.layer.triangle(4,-53,8,-50,8,-56)
					this.layer.stroke(240,this.fade)
					this.layer.strokeWeight(4)
					this.layer.fill(240,this.fade)
					this.layer.line(-16,-84,16,-84)
					this.layer.rect(0,-88,20,8,3)
				break
				case 8:
					this.layer.stroke(225,25,25,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-6,-30,-12,0)
					this.layer.line(6,-30,12,0)
					this.layer.line(-12,-60,-25,-30)
					this.layer.line(12,-60,25,-30)
					this.layer.noStroke()
					this.layer.fill(225,25,25,this.fade)
					this.layer.ellipse(0,-51,30,54)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-90,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-87,4,4)
					this.layer.ellipse(12,-87,4,4)
					this.layer.fill(225,25,25,this.fade)
					this.layer.arc(0,-90,32,32,-180,0)
					this.layer.rect(-11,-92,22,4)
					this.layer.stroke(190,20,20,this.fade)
					this.layer.strokeWeight(2)
					this.layer.fill(255,this.fade*2/3)
					this.layer.rect(8,-87,15,7,2)
				break
				case 9:
					this.layer.noStroke()
					this.layer.fill(150,250,50,this.fade)
					this.layer.ellipse(0,-20,60,45)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(24,-30,6,6)
					this.layer.ellipse(8,-30,6,6)
				break
				case 10:
					this.layer.stroke(200,160,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(200,160,80,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(150,75,75,this.fade)
					this.layer.arc(0,-54,18,24,-180,0)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(200,100,100,this.fade)
					this.layer.arc(0,-72,32,26,0,180)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,8,6)
					this.layer.ellipse(12,-72,8,6)
					this.layer.rect(3,-72,24,2)
				break
				case 11:
					this.layer.stroke(80,160,200,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(100,this.fade)
					this.layer.rect(0,-75,40,8)
					this.layer.fill(80,160,200,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(75,75,150,this.fade)
					this.layer.arc(0,-54,18,24,-180,0)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(100,100,200,this.fade)
					this.layer.arc(0,-72,32,26,0,180)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,8,6)
					this.layer.ellipse(12,-72,8,6)
					this.layer.rect(3,-72,24,2)                                                       
					this.layer.stroke(100,this.fade)
					this.layer.strokeWeight(2)
					this.layer.noFill()
					this.layer.arc(0,-75,36,36,-180,0)
				break
				case 12:
					this.layer.stroke(80,60,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(240,this.fade)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(240,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(80,60,80,this.fade)
					this.layer.arc(0,-45,20,40,0,180)
					this.layer.rect(-5,-60,3,30)
					this.layer.rect(5,-60,3,30)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.stroke(80,60,80,this.fade)
					this.layer.fill(80,60,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-16,-84,16,-84)
					this.layer.quad(-12,-84,12,-84,8,-90,-8,-90)
				break
				case 13:
					this.layer.stroke(220,180,60,this.fade)
					this.layer.strokeWeight(6)
					this.layer.line(22.5,-45,-22.5,-75)
					this.layer.stroke(80,60,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(240,this.fade)
					this.layer.line(-6,-48,-15,-70)
					this.layer.line(6,-48,22.5,-45)
					this.layer.noStroke()
					this.layer.fill(240,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(80,60,80,this.fade)
					this.layer.arc(0,-45,20,40,0,180)
					this.layer.rect(-5,-60,3,30)
					this.layer.rect(5,-60,3,30)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.stroke(80,60,80,this.fade)
					this.layer.fill(80,60,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-16,-84,16,-84)
					this.layer.quad(-12,-84,12,-84,8,-90,-8,-90)
				break
				case 14:
					this.layer.stroke(80,60,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(80,60,80,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(240,this.fade)
					this.layer.triangle(-4,-70,20/3,-70,4,-50)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.fill(80,60,80,this.fade)
					this.layer.ellipse(4,-72,8,6)
					this.layer.ellipse(12,-72,8,6)
					this.layer.rect(3,-72,24,2)
				break
				case 15:
					this.layer.stroke(20,this.fade)
					this.layer.strokeWeight(8)
					this.layer.line(36,-60,-12,-60)
					this.layer.strokeWeight(6)
					this.layer.line(25,-60,25,-48)
					this.layer.line(15,-60,15,-48)
					this.layer.stroke(80,60,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(240,this.fade)
					this.layer.line(-6,-48,15,-54)
					this.layer.line(6,-48,25,-54)
					this.layer.noStroke()
					this.layer.fill(240,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(80,60,80,this.fade)
					this.layer.arc(0,-45,20,40,0,180)
					this.layer.rect(-5,-60,3,30)
					this.layer.rect(5,-60,3,30)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.stroke(80,60,80,this.fade)
					this.layer.fill(80,60,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-16,-84,16,-84)
					this.layer.quad(-12,-84,12,-84,8,-90,-8,-90)
				break
				case 16:
					this.layer.noFill()
					this.layer.strokeWeight(6)
					this.layer.stroke(60,120,60,this.fade)
					this.layer.arc(-24,-6,48,18,-150,0)
					this.layer.arc(24,-6,48,18,-180,-30)
					this.layer.stroke(70,140,70,this.fade)
					this.layer.arc(-36,-6,36,48,-75,0)
					this.layer.arc(36,-6,36,48,-180,-105)
					this.layer.strokeWeight(10)
					this.layer.stroke(90,180,90,this.fade)
					this.layer.arc(0,-36,12,66,90,255)
					this.layer.stroke(100,200,100,this.fade)
					this.layer.arc(0,-42,12,78,-75,90)
					this.layer.noStroke()
					this.layer.fill(255,255,50,this.fade)
					this.layer.ellipse(0,-9,6,12)
					this.layer.fill(255,100,125,this.fade)
					this.layer.ellipse(0,-30,18,36)
					this.layer.noFill()
					this.layer.stroke(110,220,110,this.fade)
					this.layer.arc(0,-45,36,84,90,240)
					this.layer.stroke(120,240,120,this.fade)
					this.layer.arc(0,-51,36,96,-60,90)
					this.layer.noStroke()
					this.layer.fill(80,160,80,this.fade)
					this.layer.ellipse(-15,-3,33,15)
					this.layer.ellipse(15,-3,33,15)
				break
				case 17:
					this.layer.translate(0,-45)
					this.layer.noStroke()
					this.layer.fill(225*7/8,220*7/8,200*7/8,this.fade)
					this.layer.ellipse(sin(0)*24,cos(0)*24,10,10)
					this.layer.ellipse(sin(120)*24,cos(120)*24,10,10)
					this.layer.ellipse(sin(240)*24,cos(240)*24,10,10)
					this.layer.fill(225,220,200,this.fade)
					this.layer.ellipse(0,0,30,30)
					this.layer.fill(235,120,110,this.fade)
					this.layer.ellipse(sin(0)*24,cos(0)*24,4,4)
					this.layer.ellipse(sin(120)*24,cos(120)*24,4,4)
					this.layer.ellipse(sin(240)*24,cos(240)*24,4,4)
					this.layer.noFill()
					this.layer.stroke(235,120,110,this.fade)
					this.layer.strokeWeight(3)
					for(g=0;g<3;g++){
						this.layer.arc(8,0,16,12,-180,-30)
						this.layer.rotate(120)
					}
					this.layer.translate(0,45)
				break
				case 18:
					this.layer.stroke(125,200,125,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-6,-30,-12,0)
					this.layer.line(6,-30,12,0)
					this.layer.line(-12,-60,-25,-30)
					this.layer.line(12,-60,25,-30)
					this.layer.noStroke()
					this.layer.fill(125,200,125,this.fade)
					this.layer.ellipse(0,-51,30,54)
					this.layer.fill(75,150,75,this.fade)
					this.layer.ellipse(8,-60,4,4)
					this.layer.ellipse(9,-51,4,4)
					this.layer.ellipse(8,-42,4,4)
					this.layer.ellipse(-2,-60,4,4)
					this.layer.ellipse(-1,-51,4,4)
					this.layer.ellipse(-2,-42,4,4)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-90,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-87,4,4)
					this.layer.ellipse(12,-87,4,4)
					this.layer.stroke(40,this.fade)
					this.layer.strokeWeight(1)
					this.layer.fill(255,this.fade/5)
					this.layer.ellipse(4,-86,6,5)
					this.layer.ellipse(12,-86,6,5)
					this.layer.line(7,-86,9,-86)
				break
				case 19:
					this.layer.stroke(125,200,125,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(125,200,125,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(75,150,75,this.fade)
					this.layer.rect(0,-48,18,3)
					this.layer.rect(0,-42,18,3)
					this.layer.fill(125,200,125,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(240,220,180,this.fade)
					this.layer.rect(8,-72,13,4,3)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 20:
					this.layer.stroke(120,110,100,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(120,110,100,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(80,70,60,this.fade)
					this.layer.rect(-5,-45,4,2)
					this.layer.rect(5,-45,4,2)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.fill(60,50,40,this.fade)
					this.layer.rect(0,-90,30,16,4)
					this.layer.fill(200,25,25,this.fade)
					this.layer.ellipse(8,-90,13,13)
					this.layer.fill(255,225,25,this.fade)
					this.layer.beginShape()
					for(g=0;g<10;g++){
						this.layer.vertex(8+sin(g*36)*(3+(g%2)*3),-90+cos(g*36)*(3+(g%2)*3))
					}
					this.layer.endShape()
					this.layer.fill(200,25,25,this.fade)
					this.layer.beginShape()
					for(g=0;g<10;g++){
						this.layer.vertex(8+sin(g*36)*(3/2+(g%2)*3/2),-90+cos(g*36)*(3/2+(g%2)*3/2))
					}
					this.layer.endShape()
				break
				case 21:
					this.layer.stroke(20,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(120,100,60,this.fade)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(20,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(255,this.fade)
					this.layer.triangle(-4,-70,20/3,-70,4,-50)
					this.layer.fill(200,50,50,this.fade)
					this.layer.quad(4,-49,14/3,-55,4/3,-70,2,-55)
					this.layer.fill(120,100,60,this.fade)
					this.layer.arc(2,-45,24,40,90,270)
					this.layer.arc(5,-45,12,38,-90,90)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.stroke(20,this.fade)
					this.layer.fill(20,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-16,-84,16,-84)
					this.layer.quad(-12,-84,12,-84,8,-90,-8,-90)
				break
				case 22:
					this.layer.stroke(20,this.fade)
					this.layer.strokeWeight(8)
					this.layer.line(36,-60,-12,-60)
					this.layer.strokeWeight(6)
					this.layer.line(25,-60,25,-48)
					this.layer.line(15,-60,15,-48)
					this.layer.stroke(20,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(120,100,60,this.fade)
					this.layer.line(-6,-48,15,-54)
					this.layer.line(6,-48,25,-54)
					this.layer.noStroke()
					this.layer.fill(20,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(255,this.fade)
					this.layer.triangle(-4,-70,20/3,-70,4,-50)
					this.layer.fill(200,50,50,this.fade)
					this.layer.quad(4,-49,14/3,-55,4/3,-70,2,-55)
					this.layer.fill(120,100,60,this.fade)
					this.layer.arc(2,-45,24,40,90,270)
					this.layer.arc(5,-45,12,38,-90,90)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.stroke(20,this.fade)
					this.layer.fill(20,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-16,-84,16,-84)
					this.layer.quad(-12,-84,12,-84,8,-90,-8,-90)
				break
				case 23:
					this.layer.stroke(200,this.fade)
					this.layer.strokeWeight(3)
					this.layer.line(22.5,-45,-22.5,-75)
					this.layer.stroke(150,50,50,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-70)
					this.layer.line(6,-48,22.5,-45)
					this.layer.noStroke()
					this.layer.fill(150,50,50,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(3,-73,6,6)
					this.layer.ellipse(11,-73,6,6)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 24:
					this.layer.stroke(225,155,25,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(225,155,25,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(230,this.fade)
					this.layer.rect(-6,-45,2,6)
					this.layer.rect(0,-45,2,6)
					this.layer.rect(6,-45,2,6)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 25:
					this.layer.stroke(175,100,0,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.stroke(80,this.fade)
					this.layer.line(-16/3,-20,-20/3,-10)
					this.layer.line(16/3,-20,20/3,-10)
					this.layer.line(-9,-40,-12,-32)
					this.layer.line(9,-40,12,-32)
					this.layer.noStroke()
					this.layer.fill(175,100,0,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(80,this.fade)
					this.layer.rect(0,-45,18,4)
					this.layer.rect(0,-45,8,8)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.fill(80,this.fade)
					this.layer.arc(0,-75,36,36,-180,0)
					this.layer.fill(200,this.fade/2)
					this.layer.rect(8,-72,16,6)
				break
				case 26:
					this.layer.noFill()
					this.layer.stroke(200,this.fade)
					this.layer.strokeWeight(3)
					this.layer.line(-24,-24,36,-24)
					this.layer.arc(36,-24,24,12,90,270)
					this.layer.stroke(50,125,150,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(50,125,150,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(240,220,150,125,150)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(50,125,150,this.fade)
					this.layer.arc(0,-75,36,36,-180,0)
					this.layer.arc(8,-75,52,44,135,180)
					this.layer.arc(8,-75,20,36,0,45)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 27:
					this.layer.noStroke()
					this.layer.fill(200,160,120,this.fade)
					this.layer.arc(0,-85,20,20,-180,0)
					this.layer.fill(180,170,160,this.fade)
					this.layer.rect(0,-81,6,8)
					this.layer.fill(230,230,5,this.fade)
					this.layer.ellipse(-10,-8,20,20)
					this.layer.ellipse(10,-8,20,20)
					this.layer.ellipse(-16,-30,20,20)
					this.layer.fill(235,235,55,this.fade)
					this.layer.ellipse(0,-28,24,40)
					this.layer.fill(240,240,60,this.fade)
					this.layer.ellipse(16,-30,20,20)
					this.layer.fill(245,245,65,this.fade)
					this.layer.ellipse(0,-60,40,40)
					this.layer.fill(240,160,20,this.fade)
					this.layer.ellipse(13.5,-52,24,16)
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(1)
					this.layer.arc(13.5,-52,22,2,-180,0)
					this.layer.line(18-3,-56,18-3,-58)
					this.layer.line(18+3,-56,18+3,-58)
					this.layer.strokeWeight(3)
					this.layer.point(9-6,-64)
					this.layer.point(9+6,-64)
				break
				case 28:
					this.layer.fill(30,120,110,this.fade)
					this.layer.stroke(30,210,200,this.fade)
					this.layer.strokeWeight(3)
					this.layer.ellipse(0,-30,36,36)
					this.layer.fill(200,180,120,this.fade)
					this.layer.noStroke()
					this.layer.quad(0,-6,-24,-30,0,-54,24,-30)
					this.layer.triangle(-24,0,-21,-12,-12,-3)
					this.layer.triangle(24,0,21,-12,12,-3)
					this.layer.fill(130,110,75,this.fade)
					this.layer.quad(0,-27,-24,-30,0,-33,24,-30)
					this.layer.quad(0,-6,-3,-30,0,-54,3,-30)
				break
				case 29:
					this.layer.stroke(200,this.fade)
					this.layer.strokeWeight(2)
					this.layer.line(-15,-21,-18,-14)
					this.layer.line(15,-21,18,-14)
					this.layer.stroke(50,150,200,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(200,50,50,this.fade)
					this.layer.line(-6,-42,-15,-21)
					this.layer.line(6,-42,15,-21)
					this.layer.noStroke()
					this.layer.fill(50,150,200,this.fade)
					this.layer.ellipse(0,-42,18,30)
					this.layer.fill(200,50,50,this.fade)
					this.layer.arc(0,-39,19,36,-180,0)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-66,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-63,4,4)
					this.layer.ellipse(12,-63,4,4)
				break
				case 30:
					this.layer.stroke(100,this.fade)
					this.layer.strokeWeight(3)
					this.layer.line(15,-24,21,-10)
					this.layer.stroke(50,150,200,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(200,50,50,this.fade)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(50,150,200,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(200,50,50,this.fade)
					this.layer.arc(0,-42,19,42,-180,0)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 31:
					this.layer.fill(100,70,35,this.fade)
					this.layer.quad(25,-27,23,-29,19,-25,21,-23)
					this.layer.fill(120,90,45,this.fade)
					this.layer.rect(15,-16,12,18,2)
					this.layer.fill(110,80,40,this.fade)
					this.layer.rect(15,-16,2,18)
					this.layer.rect(15,-16,12,2)
					this.layer.stroke(160,140,120,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-50,-15,-25)
					this.layer.line(6,-50,15,-25)
					this.layer.noStroke()
					this.layer.fill(160,140,120,this.fade)
					this.layer.ellipse(0,-48,18,44)
					this.layer.fill(120,100,80,this.fade)
					this.layer.rect(-7,-46,4,3)
					this.layer.rect(0,-46,4,3)
					this.layer.rect(7,-46,4,3)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-80,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-77,4,4)
					this.layer.ellipse(12,-77,4,4)
					this.layer.fill(80,40,40,this.fade)
					this.layer.arc(0,-80,36,36,-180,0)
					this.layer.fill(200,50,50,this.fade/2)
					this.layer.rect(8,-77,20,6)
				break
				case 32:
					this.layer.stroke(20,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(20,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(200,this.fade)
					this.layer.triangle(-2,-63,6,-63,4,-51)
					this.layer.fill(150,50,50,this.fade)
					this.layer.quad(4,-51,2,-55,2,-67,5,-57)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.stroke(10,this.fade)
					this.layer.fill(10,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-16,-84,16,-84)
					this.layer.quad(-12,-84,12,-84,8,-90,-8,-90)
				break
				case 33:
					this.layer.stroke(125,this.fade)
					this.layer.strokeWeight(2)
					this.layer.line(15,-24,24,-3)
					this.layer.stroke(40,80,60,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(50,100,75,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(70,140,105,this.fade)
					this.layer.rect(0,-45,18,3)
					this.layer.rect(-5,-45,4,8)
					this.layer.rect(5,-45,4,8)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.fill(60,120,90,this.fade)
					this.layer.arc(0,-75,36,36,-180,0)
					this.layer.rect(8,-74,18,3)
				break
				case 34:
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(0,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.ellipse(0,-75,30,30)
					this.layer.arc(0,-75,32,32,-180,0)
					this.layer.rect(-11,-77,22,4)
				break
				case 35:
					this.layer.translate(0,-1.25)
					if(this.anim[1]<1){
						this.layer.translate(-7.9,-0.75)
						this.layer.rotate(-atan2(-3.95,30))
						this.layer.image(graphics.minor[6],-4*(1-this.anim[1])*this.fade,-4*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade)
						this.layer.rotate(atan2(-3.95,30))
						this.layer.translate(15.8,0)
						this.layer.rotate(atan2(-3.95,30))
						this.layer.image(graphics.minor[6],-4*(1-this.anim[1])*this.fade,-4*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade)
						this.layer.rotate(-atan2(-3.95,30))
						this.layer.translate(-7.9,0.75)
					}
					this.layer.noStroke()
					this.layer.fill(30,70,40,this.fade)
					this.layer.triangle(-12,-75,12,-75,-15,-12)
					this.layer.fill(255,215,190,this.fade)
					this.layer.ellipse(0,-46,12,30)
					this.layer.fill(250,188,173,this.fade)
					this.layer.ellipse(3,-42,0.5,2)
					this.layer.fill(242,205,219,this.fade)
					this.layer.arc(0,-37.5,11,13,0,180)
					this.layer.stroke(255,215,190,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-51,-12,-24)
					this.layer.line(4,-51,12,-24)
					this.layer.noStroke()
					this.layer.fill(30,60,40,this.fade*(1-this.anim[4]))
					this.layer.beginShape()
					this.layer.vertex(-5,-55)
					this.layer.vertex(5,-55)
					this.layer.vertex(9,-26)
					this.layer.vertex(8,-25)
					this.layer.vertex(-8,-25)
					this.layer.vertex(-9,-26)
					this.layer.endShape()
					this.layer.noStroke()
					this.layer.beginShape()
					this.layer.vertex(-5,-55)
					this.layer.vertex(5,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(9-g*1.8,-29+(g%2)*3)
					}
					this.layer.endShape()
					this.layer.beginShape()
					this.layer.vertex(-5,-55)
					this.layer.vertex(5,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(9-g*1.8,-27-(g%2)*3)
					}
					this.layer.endShape()
					this.layer.stroke(255,215,190,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-3,-32,-8,0)
					this.layer.line(3,-32,8,0)
					if(this.anim[1]<1){
						this.layer.translate(-7.9,-0.75)
						this.layer.rotate(-atan2(-3.95,30))
						this.layer.image(graphics.minor[7],-4*(1-this.anim[1])*this.fade,-4*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade)
						this.layer.rotate(atan2(-3.95,30))
						this.layer.translate(15.8,0)
						this.layer.rotate(atan2(-3.95,30))
						this.layer.image(graphics.minor[7],-4*(1-this.anim[1])*this.fade,-4*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade,8*(1-this.anim[1])*this.fade)
						this.layer.rotate(-atan2(-3.95,30))
						this.layer.translate(-7.9,0.75)
					}
					this.layer.noStroke()
					this.layer.fill(90,110,105,this.fade*(1-this.anim[4]))
					this.layer.beginShape()
					this.layer.vertex(-5,-55)
					this.layer.vertex(5,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(8.9-g*1.7,-29-g+(g%2)*3)
					}
					this.layer.endShape()
					this.layer.beginShape()
					this.layer.vertex(-5,-55)
					this.layer.vertex(5,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(8.9-g*1.7,-27-g-(g%2)*3)
					}
					this.layer.endShape()
					this.layer.fill(120,140,135,this.fade*(1-this.anim[4]))
					this.layer.beginShape()
					this.layer.vertex(5,-55)
					this.layer.vertex(-5,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(-8.9+g*1.7,-29-g+(g%2)*3)
					}
					this.layer.endShape()
					this.layer.beginShape()
					this.layer.vertex(5,-55)
					this.layer.vertex(-5,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(-8.9+g*1.7,-27-g-(g%2)*3)
					}
					this.layer.endShape()
					this.layer.fill(150,170,165,this.fade*(1-this.anim[4]))
					this.layer.beginShape()
					this.layer.vertex(-5,-55)
					this.layer.vertex(5,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(8-g*1.6,-39+(g%2)*3)
					}
					this.layer.endShape()
					this.layer.beginShape()
					this.layer.vertex(-5,-55)
					this.layer.vertex(5,-55)
					for(g=0;g<11;g++){
						this.layer.vertex(8-g*1.6,-37-(g%2)*3)
					}
					this.layer.endShape()
					this.layer.noStroke()
					this.layer.fill(255,225,200,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.stroke(40,70,45,this.fade)
					this.layer.strokeWeight(4-this.anim[0]*3)
					this.layer.line(4+this.anim[0]*2,-72,4-this.anim[0],-72-this.anim[0]*2)
					this.layer.line(4+this.anim[0]*2,-72,4-this.anim[0],-72+this.anim[0]*2)
					this.layer.line(12-this.anim[0]*2,-72,12+this.anim[0],-72-this.anim[0]*2)
					this.layer.line(12-this.anim[0]*2,-72,12+this.anim[0],-72+this.anim[0]*2)
					this.layer.stroke(48,4,7,this.fade)
					this.layer.strokeWeight(3-this.anim[0]*2)
					this.layer.line(4+this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,4-this.anim[0]+0.2-this.anim[0]*0.2,-72-this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(4+this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,4-this.anim[0]+0.2-this.anim[0]*0.2,-72+this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(12-this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,12+this.anim[0]+0.2-this.anim[0]*0.2,-72-this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.line(12-this.anim[0]*2+0.2-this.anim[0]*0.2,-72+0.2-this.anim[0]*0.2,12+this.anim[0]+0.2-this.anim[0]*0.2,-72+this.anim[0]*2+0.2-this.anim[0]*0.2)
					this.layer.noStroke()
					this.layer.fill(40,90,50,this.fade)
					this.layer.arc(0,-75,36,36,-180,0)
					this.layer.triangle(8,-75.5,18,-76,17,-69)
					this.layer.triangle(-18,-76,8,-75.5,-15,-63)
					this.layer.fill(80,200,80,this.fade)
					this.layer.triangle(-8,-81,-6,-87,-2,-83)
					this.layer.triangle(-8,-81,-10,-75,-14,-79)
					this.layer.translate(0,1.25)
				break
				case 36:
					this.layer.stroke(60,80,100,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(240,220,180,this.fade)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.stroke(100,75,75,this.fade)
					this.layer.strokeWeight(2)
					this.layer.line(-16,-27,-13,-26)
					this.layer.line(16,-27,13,-26)
					this.layer.noStroke()
					this.layer.fill(160,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(60,80,100,this.fade)
					this.layer.arc(0,-45,19,37,0,180)
					this.layer.fill(150,50,50,this.fade)
					this.layer.ellipse(2,-51,8,8)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 37:
					this.layer.noFill()
					this.layer.stroke(220,this.fade)
					this.layer.strokeWeight(5)
					this.layer.line(-4,-18,-8,0)
					this.layer.line(4,-18,8,0)
					this.layer.line(-8,-30,-18,-18)
					this.layer.line(8,-30,18,-18)
					this.layer.strokeWeight(4)
					this.layer.arc(-12,-24,16,12,0,180)
					this.layer.noStroke()
					this.layer.fill(220,this.fade)
					this.layer.ellipse(0,-28,18,27)
					this.layer.fill(255,this.fade)
					this.layer.triangle(-4,-40,20/3,-40,4,-20)
					this.layer.fill(100,200,200,this.fade)
					this.layer.quad(4,-19,14/3,-25,4/3,-40,2,-25)
					this.layer.fill(190,95,0,this.fade)
					this.layer.ellipse(0,-54,40,40)
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(1)
					this.layer.arc(9,-53,12,2,-180,0)
					this.layer.strokeWeight(3)
					this.layer.point(9-6,-62)
					this.layer.point(9+6,-62)
					this.layer.stroke(220,this.fade)
					this.layer.fill(220,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-16,-69,16,-69)
					this.layer.quad(-12,-69,12,-69,8,-75,-8,-75)
				break
				case 38:
					this.layer.noStroke()
					this.layer.fill(230,230,5,this.fade)
					this.layer.ellipse(-10,-8,20,20)
					this.layer.ellipse(10,-8,20,20)
					this.layer.ellipse(-16,-30,20,20)
					this.layer.ellipse(16,-30,20,20)
					this.layer.fill(235,235,55,this.fade)
					this.layer.ellipse(0,-28,24,40)
					this.layer.fill(245,245,65,this.fade)
					this.layer.ellipse(0,-60,40,40)
					this.layer.fill(240,160,20,this.fade)
					this.layer.ellipse(13.5,-52,24,16)
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(1)
					this.layer.arc(13.5,-52,22,2,-180,0)
					this.layer.line(18-3,-56,18-3,-58)
					this.layer.line(18+3,-56,18+3,-58)
					this.layer.strokeWeight(3)
					this.layer.point(9-6,-64)
					this.layer.point(9+6,-64)
				break
				case 39:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.quad(-25,0,25,0,20,-60*max(this.life/this.base.life,this.built),-20,-60*max(this.life/this.base.life,this.built))
					this.layer.line(-25,0,20,-60*max(this.life/this.base.life,this.built))
					this.layer.line(25,0,-20,-60*max(this.life/this.base.life,this.built))
				break
				case 40:
					this.layer.fill(200,195,190,this.fade)
					for(g=0;g<5;g++){
						this.layer.triangle(-30+g*12,0,-18+g*12,0,-24+g*12,-15*max(this.life/this.base.life,this.built))
					}
				break
				case 41:
					if(this.built==1){
						this.layer.fill(100,200,255,this.fade/3)
						for(g=1;g<9;g++){
							this.layer.quad(-20,-20,20,-20,20+g*2,-20-g*10,-20-g*2,-20-g*10)
						}
					}
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.quad(-25,0,25,0,20,-20*max(this.life/this.base.life,this.built),-20,-20*max(this.life/this.base.life,this.built))
				break
				case 42:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(25+5*max(this.life/this.base.life,this.built),-40*max(this.life/this.base.life,this.built),10*max(this.life/this.base.life,this.built),20*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)+40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
					this.layer.stroke(0,0,200,this.fade)
					this.layer.fill(0,0,240,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),50,50*max(this.life/this.base.life,this.built))
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.ellipse(0,-40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
				break
				case 43:
					this.layer.fill(100,200,255,this.fade/2)
					this.layer.rect(0,-60*max(this.life/this.base.life,this.built),50,120*max(this.life/this.base.life,this.built))
					this.layer.fill(255,this.fade)
					this.layer.rect(0,-100*max(this.life/this.base.life,this.built),40,10*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-70*max(this.life/this.base.life,this.built),40,10*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),40,10*max(this.life/this.base.life,this.built))
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(0,-10*max(this.life/this.base.life,this.built),50,20*max(this.life/this.base.life,this.built))
				break
				case 44:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),60,40*max(this.life/this.base.life,this.built))
					this.layer.noStroke()
					this.layer.fill(255,255,50,this.fade)
					this.layer.rect(-18,-40*max(this.life/this.base.life,this.built),6,30*max(this.life/this.base.life,this.built))
					this.layer.rect(-6,-40*max(this.life/this.base.life,this.built),6,30*max(this.life/this.base.life,this.built))
					this.layer.rect(6,-40*max(this.life/this.base.life,this.built),6,30*max(this.life/this.base.life,this.built))
					this.layer.rect(18,-40*max(this.life/this.base.life,this.built),6,30*max(this.life/this.base.life,this.built))
				break
				case 45:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),60,80*max(this.life/this.base.life,this.built))
					this.layer.noStroke()
					this.layer.fill(255,100,100,this.fade)
					this.layer.rect(-18,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(-6,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(6,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(18,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
				break
				case 46:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(25+5*max(this.life/this.base.life,this.built),-40*max(this.life/this.base.life,this.built),10*max(this.life/this.base.life,this.built),20*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)+40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
					this.layer.stroke(200,0,0,this.fade)
					this.layer.fill(240,0,0,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),50,50*max(this.life/this.base.life,this.built))
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.ellipse(0,-40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
				break
				case 47:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),60,80*max(this.life/this.base.life,this.built))
					this.layer.noStroke()
					this.layer.fill(100,255,255,this.fade)
					this.layer.rect(-18,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(-6,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(6,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(18,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
				break
				case 48:
					this.layer.fill(40,80,40,this.fade)
					for(g=0;g<10;g++){
						this.layer.triangle(-30+g*6,0,-24+g*6,0,-27+g*6,-10*max(this.life/this.base.life,this.built))
					}
				break
				case 49:
					if(this.built==1){
						this.layer.fill(200,255,100,this.fade/3)
						for(g=1;g<9;g++){
							this.layer.quad(-20,-20,20,-20,20+g*2,-20-g*10,-20-g*2,-20-g*10)
						}
					}
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.quad(-25,0,25,0,20,-20*max(this.life/this.base.life,this.built),-20,-20*max(this.life/this.base.life,this.built))
				break
				case 50:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(0,-30*max(this.life/this.base.life,this.built),50,60*max(this.life/this.base.life,this.built))
					this.layer.noStroke()
					this.layer.fill(40,this.fade)
					this.layer.rect(-12,-30*max(this.life/this.base.life,this.built),6,12*max(this.life/this.base.life,this.built))
					this.layer.rect(3,-33*max(this.life/this.base.life,this.built),24,6*max(this.life/this.base.life,this.built))
				break
				case 51:
					this.layer.fill(250,235,155,this.fade)
					this.layer.triangle(0,-100,45,-55,0,-55)
					this.layer.triangle(40,-50,30,-50,36,-24)
					this.layer.fill(235,140,70,this.fade)
					this.layer.triangle(0,-100,-45,-55,15,-55)
					this.layer.triangle(-40,-50,-30,-50,-36,-24)
					this.layer.fill(235,180,100,this.fade)
					this.layer.triangle(0,-10,45,-55,0,-55)
					this.layer.triangle(20,-35,8,-35,18,5)
					this.layer.fill(185,115,70,this.fade)
					this.layer.triangle(0,-10,-45,-55,15,-55)
					this.layer.triangle(-20,-35,-8,-35,-18,5)
				break
				case 52:
					this.layer.fill(80,75,70,this.fade)
					regPoly(this.layer,0,-48,8,16,0)
					regPoly(this.layer,-24,-32,8,10,0)
					regPoly(this.layer,24,-32,8,10,0)
					this.layer.fill(32,30,28,this.fade)
					this.layer.ellipse(8,-46,5,5)
					this.layer.ellipse(-2,-46,5,5)
				break
				case 53:
					this.layer.noStroke()
					this.layer.fill(230,230,5,this.fade)
					this.layer.ellipse(-12,-10,24,24)
					this.layer.ellipse(12,-10,24,24)
					this.layer.ellipse(-20,-36,24,24)
					this.layer.fill(235,235,55,this.fade)
					this.layer.ellipse(0,-36,32,52)
					this.layer.fill(240,240,60,this.fade)
					this.layer.ellipse(20,-36,24,24)
					this.layer.fill(245,245,65,this.fade)
					this.layer.ellipse(0,-75,40,40)
					this.layer.fill(240,160,20,this.fade)
					this.layer.ellipse(13.5,-67,24,16)
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(1)
					this.layer.arc(13.5,-67,22,2,-180,0)
					this.layer.line(18-3,-71,18-3,-73)
					this.layer.line(18+3,-71,18+3,-73)
					this.layer.strokeWeight(3)
					this.layer.point(9-6,-79)
					this.layer.point(9+6,-79)
				break
				case 54:
					this.layer.noStroke()
					this.layer.fill(66,22,22,this.fade)
					this.layer.ellipse(-12,-10,24,24)
					this.layer.ellipse(12,-10,24,24)
					this.layer.ellipse(-20,-36,24,24)
					this.layer.fill(72,24,24,this.fade)
					this.layer.ellipse(0,-36,32,52)
					this.layer.fill(200,this.fade)
					this.layer.ellipse(-6,-51,10,10)
					this.layer.fill(255,255,150,this.fade)
					this.layer.quad(-6,-53,0,-51,-6,-49,-12,-51)
					this.layer.quad(-6,-57,-4,-51,-6,-45,-8,-51)
					this.layer.fill(66,22,22,this.fade)
					this.layer.ellipse(20,-36,24,24)
					this.layer.fill(245,245,65,this.fade)
					this.layer.ellipse(0,-75,40,40)
					this.layer.fill(240,160,20,this.fade)
					this.layer.ellipse(13.5,-67,24,16)
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(1)
					this.layer.arc(13.5,-67,22,2,-180,0)
					this.layer.line(18-3,-71,18-3,-73)
					this.layer.line(18+3,-71,18+3,-73)
					this.layer.strokeWeight(3)
					this.layer.point(9-6,-79)
					this.layer.point(9+6,-79)
					this.layer.noStroke()
					this.layer.fill(60,20,20,this.fade)
					this.layer.arc(0,-75,48,48,-195,-15)
				break
				case 55:
					this.layer.fill(160,this.fade)
					this.layer.rect(0,0,64,10)
					for(g=0;g<10;g++){
						if(g<3||g>=7)
						this.layer.triangle(-30+g*6,-5,-24+g*6,-5,-27+g*6,-20*max(this.life/this.base.life,this.built))
					}
				break
				case 56:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(25+12*max(this.life/this.base.life,this.built),-48*max(this.life/this.base.life,this.built),8*max(this.life/this.base.life,this.built),8*max(this.life/this.base.life,this.built))
					this.layer.rect(25+12*max(this.life/this.base.life,this.built),-40*max(this.life/this.base.life,this.built),24*max(this.life/this.base.life,this.built),8*max(this.life/this.base.life,this.built))
					this.layer.rect(25+12*max(this.life/this.base.life,this.built),-32*max(this.life/this.base.life,this.built),8*max(this.life/this.base.life,this.built),8*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)+40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
					this.layer.stroke(0,200,200,this.fade)
					this.layer.fill(0,240,240,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),50,50*max(this.life/this.base.life,this.built))
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.ellipse(0,-40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
				break
				case 57:
					if(this.built==1){
						this.layer.fill(100,this.fade/3)
						for(g=1;g<9;g++){
							this.layer.quad(-20,-20,20,-20,20+g*2,-20-g*10,-20-g*2,-20-g*10)
						}
					}
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.quad(-25,0,25,0,20,-20*max(this.life/this.base.life,this.built),-20,-20*max(this.life/this.base.life,this.built))
				break
				case 58:
					if(this.built==1){
						this.layer.fill(255,this.fade/3)
						for(g=1;g<9;g++){
							this.layer.quad(-20,-20,20,-20,20+g*2,-20-g*10,-20-g*2,-20-g*10)
						}
					}
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.quad(-25,0,25,0,20,-20*max(this.life/this.base.life,this.built),-20,-20*max(this.life/this.base.life,this.built))
				break
				case 59:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),60,80*max(this.life/this.base.life,this.built))
					this.layer.noStroke()
					this.layer.fill(200,150,200,this.fade)
					this.layer.rect(-18,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(-6,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(6,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(18,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
				break
				case 60:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.quad(25,-50*max(this.life/this.base.life,this.built),25,-30*max(this.life/this.base.life,this.built),25+10*max(this.life/this.base.life,this.built),-20*max(this.life/this.base.life,this.built),25+10*max(this.life/this.base.life,this.built),-60*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)+40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
					this.layer.stroke(200,0,200,this.fade)
					this.layer.fill(240,0,240,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),50,50*max(this.life/this.base.life,this.built))
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.ellipse(0,-40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
				break
				case 61:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(25+5*max(this.life/this.base.life,this.built),-55*max(this.life/this.base.life,this.built),10*max(this.life/this.base.life,this.built),8*max(this.life/this.base.life,this.built))
					this.layer.rect(25+5*max(this.life/this.base.life,this.built),-40*max(this.life/this.base.life,this.built),10*max(this.life/this.base.life,this.built),8*max(this.life/this.base.life,this.built))
					this.layer.rect(25+5*max(this.life/this.base.life,this.built),-25*max(this.life/this.base.life,this.built),10*max(this.life/this.base.life,this.built),8*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)+40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
					this.layer.stroke(0,200,0,this.fade)
					this.layer.fill(0,240,0,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),50,50*max(this.life/this.base.life,this.built))
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.ellipse(0,-40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
				break
				case 62:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),60,80*max(this.life/this.base.life,this.built))
					this.layer.noStroke()
					this.layer.fill(140,160,180,this.fade)
					this.layer.rect(-18,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(-6,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(6,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
					this.layer.rect(18,-40*max(this.life/this.base.life,this.built),6,60*max(this.life/this.base.life,this.built))
				break
				case 63:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(-25-5*max(this.life/this.base.life,this.built),-40*max(this.life/this.base.life,this.built),10*max(this.life/this.base.life,this.built),30*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)-30*max(this.life/this.base.life,this.built),30,10*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)+40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),50,50*max(this.life/this.base.life,this.built))
					this.layer.stroke(255,255,50,this.fade)
					this.layer.fill(200,200,40,this.fade)
					this.layer.ellipse(0,-40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
				break
				case 64:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(-25-5*max(this.life/this.base.life,this.built),-40*max(this.life/this.base.life,this.built),10*max(this.life/this.base.life,this.built),30*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)-30*max(this.life/this.base.life,this.built),30,10*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)+40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),50,50*max(this.life/this.base.life,this.built))
					this.layer.stroke(100,255,100,this.fade)
					this.layer.fill(80,200,80,this.fade)
					this.layer.ellipse(0,-40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
				break
				case 65:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(-25-5*max(this.life/this.base.life,this.built),-40*max(this.life/this.base.life,this.built),10*max(this.life/this.base.life,this.built),30*max(this.life/this.base.life,this.built))
					this.layer.rect(25+5*max(this.life/this.base.life,this.built),-40*max(this.life/this.base.life,this.built),10*max(this.life/this.base.life,this.built),30*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)-30*max(this.life/this.base.life,this.built),30,10*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)+40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),50,50*max(this.life/this.base.life,this.built))
					this.layer.stroke(255,100,255,this.fade)
					this.layer.fill(200,80,200,this.fade)
					this.layer.ellipse(0,-40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
				break
				case 66:
					this.layer.strokeWeight(5)
					this.layer.stroke(100,this.fade)
					this.layer.fill(120,this.fade)
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)-30*max(this.life/this.base.life,this.built),30,10*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built)+40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
					this.layer.rect(0,-40*max(this.life/this.base.life,this.built),50,50*max(this.life/this.base.life,this.built))
					this.layer.stroke(150,200,255,this.fade)
					this.layer.fill(120,160,200,this.fade)
					this.layer.ellipse(0,-40*max(this.life/this.base.life,this.built),30,30*max(this.life/this.base.life,this.built))
				break
				case 67:
					this.layer.noFill()
					this.layer.stroke(160,80,0,this.fade)
					this.layer.strokeWeight(5)
					this.layer.line(-4,-18,-8,0)
					this.layer.line(4,-18,8,0)
					this.layer.line(-8,-30,-18,-18)
					this.layer.line(8,-30,18,-18)
					this.layer.strokeWeight(4)
					this.layer.arc(-12,-24,16,12,0,180)
					this.layer.noStroke()
					this.layer.fill(170,85,0,this.fade)
					this.layer.ellipse(0,-28,18,27)
					this.layer.fill(190,95,0,this.fade)
					this.layer.ellipse(0,-54,40,40)
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(1)
					this.layer.arc(9,-53,12,2,-180,0)
					this.layer.strokeWeight(3)
					this.layer.point(9-6,-62)
					this.layer.point(9+6,-62)
				break
				case 68:
					this.layer.stroke(225,25,25,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(225,25,25,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.fill(225,25,25,this.fade)
					this.layer.arc(0,-75,32,32,-180,0)
					this.layer.rect(-11,-77,22,4)
					this.layer.stroke(190,20,20,this.fade)
					this.layer.strokeWeight(2)
					this.layer.fill(255,this.fade*2/3)
					this.layer.rect(8,-72,15,7,2)
				break
				case 69:
					this.layer.stroke(180,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(180,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(120,80,40,this.fade)
					this.layer.rect(0,-45,18,4)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.fill(200,160,40,this.fade)
					this.layer.stroke(200,160,40,this.fade)
					this.layer.strokeWeight(5)
					this.layer.line(-16,-84,16,-84)
					this.layer.quad(-12,-84,12,-84,8,-88,-8,-88)
				break
				case 70:
					this.layer.fill(200,this.fade)
					this.layer.triangle(0,-6,0,-24,-15,-15)
					this.layer.triangle(0,-24,0,-42,15,-33)
					this.layer.stroke(25,150,25,this.fade)
					this.layer.strokeWeight(12)
					this.layer.line(0,0,0,-48)
				break
				case 71:
					this.layer.fill(100,this.fade)
					this.layer.stroke(120,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.rect(0,-45,15,30)
					this.layer.rect(0,-75,27,27)
					this.layer.fill(50,50,200,this.fade)
					this.layer.noStroke()
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 72:
					this.layer.fill(100,this.fade)
					this.layer.stroke(120,this.fade)
					this.layer.strokeWeight(4)
					this.layer.rect(0,-60,40,12)
					this.layer.rect(0,-51,30,6)
					this.layer.rect(-15,-72,6,12)
					this.layer.rect(15,-72,6,12)
					this.layer.fill(50,50,200,this.fade)
					this.layer.noStroke()
					this.layer.ellipse(4,-63,4,4)
					this.layer.ellipse(12,-63,4,4)
				break
				case 73:
					this.layer.stroke(65,85,85,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(85,135,195,this.fade)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(95,105,110,this.fade)
					this.layer.ellipse(0,-47,18,42)
					this.layer.fill(30,25,0,this.fade)
					this.layer.rect(-7,-45,5,2)
					this.layer.rect(0,-45,5,2)
					this.layer.rect(7,-45,5,2)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-78,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-75,4,4)
					this.layer.ellipse(12,-75,4,4)
					this.layer.fill(80,85,90,this.fade)
					this.layer.arc(0,-78,36,36,-180,0)
					this.layer.fill(65,130,140,this.fade/2)
					this.layer.rect(8,-75,20,6)
				break
				case 74:
					this.layer.stroke(100,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(100,this.fade)
					this.layer.ellipse(0,-47,18,42)
					this.layer.fill(60,this.fade)
					this.layer.rect(0,-45,20,3)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-78,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-75,4,4)
					this.layer.ellipse(12,-75,4,4)
					this.layer.fill(50,50,200,this.fade)
					this.layer.ellipse(-3,-57,5,5)
					this.layer.stroke(40,this.fade)
					this.layer.strokeWeight(1)
					this.layer.fill(255,this.fade/5)
					this.layer.ellipse(4,-74,6,5)
					this.layer.ellipse(12,-74,6,5)
					this.layer.line(7,-74,9,-74)
				break
				case 75:
					this.layer.stroke(75,80,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(80,85,85,this.fade)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(85,90,90,this.fade)
					this.layer.ellipse(0,-47,18,42)
					this.layer.fill(80,75,50,this.fade)
					this.layer.rect(-7,-45,5,2)
					this.layer.rect(0,-45,5,2)
					this.layer.rect(7,-45,5,2)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-78,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-75,4,4)
					this.layer.ellipse(12,-75,4,4)
					this.layer.fill(80,85,85,this.fade)
					this.layer.arc(0,-78,36,36,-180,0)
					this.layer.fill(100,150,200,this.fade/2)
					this.layer.rect(8,-75,20,6)
				break
				case 76:
					this.layer.noStroke()
					this.layer.fill(150,250,50,this.fade)
					this.layer.ellipse(0,-30,90,67.5)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(36,-45,6,6)
					this.layer.ellipse(12,-45,6,6)
				break
				case 77:
					this.layer.noStroke()
					this.layer.fill(150,100,50,this.fade)
					this.layer.ellipse(0,-20,60,45)
					for(g=0;g<18;g++){
						this.layer.triangle(sin(g*20-8)*28,cos(g*20-8)*21-20,sin(g*20+8)*28,cos(g*20+8)*21-20,sin(g*20)*36,cos(g*20)*27-20)
					}
					this.layer.fill(0,this.fade)
					this.layer.ellipse(24,-30,6,6)
					this.layer.ellipse(8,-30,6,6)
				break
				case 78:
					this.layer.noStroke()
					this.layer.fill(150,100,50,this.fade)
					this.layer.ellipse(0,-30,90,67.5)
					for(g=0;g<18;g++){
						this.layer.triangle(sin(g*20-8)*42,cos(g*20-8)*31.5-30,sin(g*20+8)*42,cos(g*20+8)*31.5-30,sin(g*20)*54,cos(g*20)*40.5-30)
					}
					this.layer.fill(0,this.fade)
					this.layer.ellipse(36,-45,6,6)
					this.layer.ellipse(12,-45,6,6)
				break
				case 79:
					this.layer.noStroke()
					this.layer.fill(240,this.fade)
					this.layer.rect(0,-20,12,46)
					this.layer.rect(-12,-20,12,42)
					this.layer.rect(-24,-20,12,20)
					this.layer.rect(12,-20,12,42)
					this.layer.rect(24,-20,12,20)
					this.layer.ellipse(0,-20,60,45)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(24,-30,6,6)
					this.layer.ellipse(8,-30,6,6)
				break
				case 80:
					this.layer.noStroke()
					this.layer.fill(240,this.fade)
					this.layer.rect(0,-30,18,69)
					this.layer.rect(-18,-30,18,63)
					this.layer.rect(-36,-30,18,30)
					this.layer.rect(18,-30,18,63)
					this.layer.rect(36,-30,18,30)
					this.layer.ellipse(0,-30,90,67.5)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(36,-45,6,6)
					this.layer.ellipse(12,-45,6,6)
				break
				case 81:
					this.layer.stroke(40,80,40,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(40,80,40,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.arc(6,-75,18,15,0,180)
					this.layer.fill(200,150,0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 82:
					this.layer.stroke(100,150,50,this.fade)
					this.layer.strokeWeight(3)
					this.layer.line(-2,-21,-6,0)
					this.layer.line(2,-21,6,0)
					this.layer.line(-5,-27,-10,-15)
					this.layer.line(5,-27,10,-15)
					this.layer.noStroke()
					this.layer.fill(100,150,50,this.fade)
					this.layer.ellipse(0,-24,12,24)
					this.layer.fill(150,200,50,this.fade)
					this.layer.ellipse(0,-45,24,24)
					this.layer.triangle(-9,-48,-3,-54,-12,-57)
					this.layer.triangle(9,-48,3,-54,12,-57)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(3,-44,4,4)
					this.layer.ellipse(9,-44,4,4)
				break
				case 83:
					this.layer.fill(175,this.fade)
					this.layer.ellipse(0,-20,48,48)
					this.layer.fill(125,this.fade)
					this.layer.ellipse(0,-20,36,36)
					this.layer.fill(225,225,25,this.fade)
					this.layer.arc(0,-20,30,30,-120,-60)
					this.layer.arc(0,-20,30,30,0,60)
					this.layer.arc(0,-20,30,30,120,180)
					this.layer.fill(125,this.fade)
					this.layer.ellipse(0,-20,12,12)
					this.layer.fill(225,225,25,this.fade)
					this.layer.ellipse(0,-20,6,6)
				break
				case 84:
					this.layer.stroke(110,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(120,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(100,this.fade)
					this.layer.rect(0,-45,18,4)
					this.layer.fill(60,this.fade)
					this.layer.rect(0,-45,8,8)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.stroke(120,this.fade)
					this.layer.strokeWeight(2)
					this.layer.fill(200,this.fade/3)
					this.layer.rect(8,-72,16,8,2)
				break
				case 85:
					this.layer.stroke(110,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-24,-8,0)
					this.layer.line(4,-24,8,0)
					this.layer.line(-12,-36,-24,-24)
					this.layer.line(12,-36,24,-24)
					this.layer.noStroke()
					this.layer.fill(120,this.fade)
					this.layer.ellipse(0,-39,36,30)
					this.layer.fill(100,this.fade)
					this.layer.rect(0,-39,36,4)
					this.layer.fill(60,this.fade)
					this.layer.rect(0,-39,8,8)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-66,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-63,4,4)
					this.layer.ellipse(12,-63,4,4)
					this.layer.stroke(120,this.fade)
					this.layer.strokeWeight(2)
					this.layer.fill(200,this.fade/3)
					this.layer.rect(8,-63,16,8,2)
				break
				case 86:
					this.layer.stroke(50,75,100,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(40,60,80,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(200,100,50,this.fade)
					this.layer.arc(0,-75,33,33,-180,0)
					this.layer.triangle(-15,-78,-30,-78,-28,-84)
					this.layer.fill(160,80,40,this.fade)
					this.layer.arc(0,-75,24,24,-180,0)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 87:
					this.layer.stroke(100,75,50,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(80,60,40,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(30,35,40,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(240,220,180,this.fade)
					this.layer.rect(8,-72,12,3)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 88:
					this.layer.fill(100,225,255,this.fade)
					this.layer.arc(0,-10,30,30,-180,0)
					this.layer.fill(150,255,255,this.fade)
					this.layer.ellipse(-6,-16,8,8)
					this.layer.ellipse(7,-15,6,6)
					this.layer.fill(100,this.fade)
					this.layer.rect(0,-5,8,10)
				break
				case 89:
					this.layer.fill(255,125,100,this.fade)
					this.layer.arc(0,-10,30,30,-180,0)
					this.layer.fill(255,100,100,this.fade)
					this.layer.ellipse(-6,-16,8,8)
					this.layer.ellipse(7,-15,6,6)
					this.layer.fill(100,this.fade)
					this.layer.rect(0,-5,8,10)
				break
				case 90:
					this.layer.fill(100,65,90,this.fade)
					this.layer.ellipse(0,-60,90,90)
					this.layer.fill(170,90,150,this.fade)
					this.layer.ellipse(0,-60,75,75)
					this.layer.fill(230,130,210,this.fade)
					this.layer.ellipse(0,-60,60,60)
					this.layer.fill(225,220,185,this.fade)
					regPoly(this.layer,-2,-60,6,18,0)
					this.layer.fill(245,240,205,this.fade)
					regPoly(this.layer,2,-60,6,18,0)
					for(g=0;g<this.battle.counter.turn%7;g++){
						this.layer.fill(150,255,50,this.fade)
						this.layer.ellipse(cos(g*60-60)*40,sin(g*60-60)*45-60,12,12)
						this.layer.fill(150,255,50,this.fade/2)
						this.layer.ellipse(cos(g*60-60)*40,sin(g*60-60)*45-60,18,18)
					}
				break
				case 91:
					this.layer.stroke(200,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(200,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(255,50,50,this.fade)
					this.layer.rect(0,-45,18,3)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 92:
					this.layer.noStroke()
					this.layer.fill(230,230,5,this.fade)
					this.layer.ellipse(-10,-8,20,20)
					this.layer.ellipse(10,-8,20,20)
					this.layer.ellipse(-16,-30,20,20)
					this.layer.fill(240,240,60,this.fade)
					this.layer.ellipse(16,-30,20,20)
					this.layer.fill(60,this.fade)
					this.layer.ellipse(0,-28,24,40)
					this.layer.fill(255,this.fade)
					this.layer.triangle(-6,-48,10,-48,6,-32)
					this.layer.fill(100,150,255,this.fade)
					this.layer.quad(6,-32,7,-36,2,-48,3,-36)
					this.layer.fill(245,245,65,this.fade)
					this.layer.ellipse(0,-60,40,40)
					this.layer.fill(240,160,20,this.fade)
					this.layer.ellipse(13.5,-52,24,16)
					this.layer.stroke(0,this.fade)
					this.layer.strokeWeight(1)
					this.layer.arc(13.5,-52,22,2,-180,0)
					this.layer.line(18-3,-56,18-3,-58)
					this.layer.line(18+3,-56,18+3,-58)
					this.layer.noStroke()
					this.layer.fill(0,this.fade)
					this.layer.ellipse(3,-63,8,6)
					this.layer.ellipse(15,-63,8,6)
					this.layer.rect(5,-63,30,2)
					this.layer.stroke(40,this.fade)
					this.layer.strokeWeight(4)
					this.layer.fill(40,this.fade)
					this.layer.line(-20,-76,20,-76)
					this.layer.quad(-12,-76,12,-76,8,-84,-8,-84)
					this.layer.translate(this.position.x-this.base.position.x,this.position.y-this.base.position.y)
					this.layer.noFill()
					this.layer.stroke(240,240,40,this.fade)
					this.layer.strokeWeight(4)
					this.layer.strokeCap(SQUARE)
					this.layer.arc(1,-134,20,20,-135,45)
					this.layer.arc(-1,-132,20,20,45,225)
					this.layer.strokeCap(ROUND)
					this.layer.noStroke()
					this.layer.fill(255,this.fade)
					this.layer.textSize(16)
					this.layer.scale(-1,1)
					this.layer.text(this.combo,0,-131)
					this.layer.scale(-1,1)
					this.layer.translate(this.base.position.x-this.position.x,this.base.position.y-this.position.y)
				break
				case 93:
					this.layer.stroke(200,150,150,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(200,150,150,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(200,0,0,this.fade)
					regTriangle(this.layer,0,-51,4,0)
					this.layer.fill(0,150,255,this.fade)
					regTriangle(this.layer,0,-45,4,0)
					this.layer.fill(255,255,50,this.fade)
					regTriangle(this.layer,0,-39,4,0)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 94:
					this.layer.stroke(150,200,200,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(150,200,200,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(200,0,0,this.fade)
					regTriangle(this.layer,0,-51,4,60)
					this.layer.fill(0,150,255,this.fade)
					regTriangle(this.layer,0,-45,4,60)
					this.layer.fill(255,255,50,this.fade)
					regTriangle(this.layer,0,-39,4,60)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 95: case 103:
					this.layer.fill(100,this.fade)
					this.layer.stroke(120,this.fade)
					this.layer.strokeWeight(4)
					this.layer.ellipse(0,-45,20,20)
					this.layer.noFill()
					for(let g=0;g<4;g++){
						this.layer.line(sin(g*90)*10,cos(g*90)*10-45,sin(g*90)*15,cos(g*90)*15-45)
						if(this.type==95){
							this.layer.line(sin(g*90+45)*10,cos(g*90+45)*10-45,sin(g*90+45)*25,cos(g*90+45)*25-45)
							this.layer.arc(0,-45,50,50,g*90+30,g*90+60)
						}
					}
					this.layer.fill(50,50,200,this.fade)
					this.layer.noStroke()
					this.layer.ellipse(2,-45,4,4)
				break
				case 96:
					this.layer.fill(100,this.fade)
					this.layer.stroke(120,this.fade)
					this.layer.strokeWeight(4)
					this.layer.ellipse(-30,-15,30,30)
					this.layer.ellipse(30,-15,30,30)
					this.layer.rect(0,-45,120,60)
					this.layer.ellipse(0,-45,30,30)
					this.layer.line(-45,-75,-45,-90)
					this.layer.fill(50,50,200,this.fade)
					this.layer.noStroke()
					this.layer.rect(47,-55,30,10)
				break
				case 97:
					this.layer.stroke(65,85,85,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(85,195,135,this.fade)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(95,110,105,this.fade)
					this.layer.ellipse(0,-47,18,42)
					this.layer.fill(30,25,0,this.fade)
					this.layer.rect(-7,-45,5,2)
					this.layer.rect(0,-45,5,2)
					this.layer.rect(7,-45,5,2)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-78,30,30)
					this.layer.fill(255,this.fade)
					this.layer.ellipse(4,-75,4,4)
					this.layer.ellipse(12,-75,4,4)
					this.layer.fill(80,90,95,this.fade)
					this.layer.arc(0,-78,36,36,-180,0)
					this.layer.fill(240,230,65,this.fade/2)
					this.layer.rect(8,-75,20,6)
				break
				case 98:
					this.layer.fill(100,this.fade)
					this.layer.stroke(120,this.fade)
					this.layer.strokeWeight(4)
					this.layer.rect(-10,-8,16,16)
					this.layer.rect(10,-8,16,16)
					this.layer.rect(-16,-30,16,16)
					this.layer.rect(16,-30,16,16)
					this.layer.rect(0,-28,20,32)
					this.layer.rect(0,-60,32,32)
					this.layer.rect(13.5,-52,20,12)
					this.layer.fill(50,50,200,this.fade)
					this.layer.noStroke()
					this.layer.ellipse(9-6,-64,4,4)
					this.layer.ellipse(9+6,-64,4,4)
				break
				case 99:
					this.layer.stroke(100,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(100,this.fade)
					this.layer.ellipse(0,-47,18,42)
					this.layer.fill(60,this.fade)
					this.layer.rect(0,-45,20,3)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-78,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-75,4,4)
					this.layer.ellipse(12,-75,4,4)
					this.layer.fill(50,50,200,this.fade)
					this.layer.ellipse(-3,-57,5,5)
					this.layer.stroke(40,this.fade)
					this.layer.strokeWeight(1)
					this.layer.fill(255,this.fade/5)
					this.layer.ellipse(4,-74,6,5)
					this.layer.ellipse(12,-74,6,5)
					this.layer.line(7,-74,9,-74)
				break
				case 100:
					this.layer.stroke(85,85,65,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.stroke(195,135,85,this.fade)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(160,this.fade)
					this.layer.ellipse(0,-47,18,42)
					this.layer.fill(120,this.fade)
					this.layer.rect(-7,-45,5,2)
					this.layer.rect(0,-45,5,2)
					this.layer.rect(7,-45,5,2)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-75,4,4)
					this.layer.ellipse(12,-75,4,4)
					this.layer.fill(220,220,60,this.fade)
					this.layer.rect(0,-81,30,8)
					this.layer.rect(21,-79,12,4)
				break
				case 101:
					this.layer.stroke(185,180,165,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(185,180,165,this.fade)
					this.layer.ellipse(0,-47,18,42)
					this.layer.fill(30,25,0,this.fade)
					this.layer.rect(-7,-45,5,2)
					this.layer.rect(0,-45,5,2)
					this.layer.rect(7,-45,5,2)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-78,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-75,4,4)
					this.layer.ellipse(12,-75,4,4)
					this.layer.fill(120,135,95,this.fade)
					this.layer.arc(0,-78,36,36,-180,0)
					this.layer.fill(10,this.fade/2)
					this.layer.rect(8,-75,20,6)
				break
				case 102:
					this.layer.stroke(80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(80,this.fade)
					this.layer.ellipse(0,-45,18,36)
					this.layer.fill(240,220,180,this.fade)
					this.layer.ellipse(0,-75,30,30)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
				break
				case 104:
					this.layer.stroke(0,this.fade/5)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-24)
					this.layer.line(6,-48,15,-24)
					this.layer.noStroke()
					this.layer.fill(0,this.fade/5)
					this.layer.ellipse(0,-47,18,42)
					this.layer.ellipse(0,-78,30,30)
					this.layer.arc(0,-78,36,36,-180,0)
					this.layer.fill(255,this.fade)
					this.layer.ellipse(4,-75,4,4)
					this.layer.ellipse(12,-75,4,4)
				break
				case 105:
					this.layer.stroke(175,75,175,this.fade/2)
					this.layer.strokeWeight(12)
					this.layer.line(22.5,-45,-22.5,-75)
					this.layer.stroke(175,75,175,this.fade)
					this.layer.strokeWeight(6)
					this.layer.line(22.5,-45,-22.5,-75)
					this.layer.fill(25,30,35,this.fade)
					this.layer.stroke(30,35,40,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-4,-30,-8,0)
					this.layer.line(4,-30,8,0)
					this.layer.line(-6,-48,-15,-70)
					this.layer.line(6,-48,22.5,-45)
					this.layer.rect(0,-45,15,30)
					this.layer.rect(0,-75,27,27)
					this.layer.fill(200,50,50,this.fade)
					this.layer.noStroke()
					this.layer.ellipse(4,-72,4,4)
					this.layer.ellipse(12,-72,4,4)
					this.layer.stroke(80,60,80,this.fade)
					this.layer.fill(80,60,80,this.fade)
					this.layer.strokeWeight(4)
					this.layer.line(-16,-88,16,-88)
					this.layer.quad(-12,-88,12,-88,8,-94,-8,-94)
				break
				case 106:
					this.layer.stroke(50,150,100,this.fade)
					this.layer.strokeWeight(3)
					this.layer.line(-2,-30,-6,0)
					this.layer.line(2,-30,6,0)
					this.layer.line(-3,-39,-9,-21)
					this.layer.line(3,-39,9,-21)
					this.layer.noStroke()
					this.layer.fill(50,150,100,this.fade)
					this.layer.ellipse(0,-33,9,36)
					this.layer.fill(50,200,150,this.fade)
					this.layer.ellipse(0,-60,27,27)
					this.layer.triangle(-9,-63,-3,-69,-18,-67)
					this.layer.triangle(9,-63,3,-69,18,-67)
					this.layer.fill(0,this.fade)
					this.layer.ellipse(3,-55,4,4)
					this.layer.ellipse(10,-55,4,4)
				break
			}
			if(this.team==0&&detail==0){
				for(let e=0,le=this.uniqueDisplay.length;e<le;e++){
					this.layer.translate(0,e*35-le*35+105-this.height)
					switch(this.uniqueDisplay[e]){
						case 0:
							this.layer.noFill()
							this.layer.stroke(240,240,40,this.fade)
							this.layer.strokeWeight(4)
							this.layer.strokeCap(SQUARE)
							this.layer.arc(1,-114,20,20,-45,135)
							this.layer.arc(-1,-116,20,20,135,315)
							this.layer.strokeCap(ROUND)
							this.layer.noStroke()
							this.layer.fill(255,this.fade)
							this.layer.textSize(16)
							this.layer.text(this.combo,0,-113)
						break
						case 1:
							this.layer.noStroke()
							this.layer.fill(255,this.fade/5)
							for(let f=0,lf=this.ammo.length;f<lf;f++){
								this.layer.ellipse(-f*24+lf*12-12,-113,20,20)
							}
							for(let f=0,lf=this.ammo.length;f<lf;f++){
								displayAmmo(this.layer,-f*24+lf*12-12,-113,this.ammo[f],this.ammoDetail[f],this.fade)
							}
						break
						case 2:
							if(this.fade>0){
								this.layer.image(graphics.minor[4],-40*this.fade,-112-10*this.fade,80*this.fade,20*this.fade)
							}
							this.layer.stroke(255,this.fade)
							this.layer.strokeWeight(2)
							this.layer.line(constrain(this.meter*30/this.base.meter,-30,30),-114,constrain(this.meter*30/this.base.meter,-30,30),-110)
							this.layer.noStroke()
							this.layer.fill(255,this.fade)
							this.layer.textSize(8)
							this.layer.text(nfp(this.meter),0,-101)
						break
					}
					this.layer.translate(0,le*35-e*35-105+this.height)
				}
			}
			this.layer.scale(1/this.size/this.flip,1/this.size)
			this.layer.rotate(-this.direction)
			this.layer.translate(-this.position.x,-this.position.y)
		}
	}
	displayInfo(){
		if(this.life>0||this.id==1){
			this.layer.translate(this.base.position.x,this.base.position.y)
			this.layer.noStroke()
			this.layer.fill(0,this.fade)
			this.layer.rect(0,20,62,10,4)
			this.layer.fill(150,this.fade)
			this.layer.rect(0,20,60,8,3)
			if(this.collect.life>=this.life){
				this.layer.fill(240,0,0,this.fade)
				this.layer.rect((max(0,this.collect.life)/this.base.life)*30-30,20,(max(0,this.collect.life)/this.base.life)*60,2+min((max(0,this.collect.life)/this.base.life)*90,6),3)
				this.layer.fill(min(255,510-max(0,this.life)/this.base.life*510)-max(0,5-max(0,this.life)/this.base.life*30)*25,max(0,this.life)/this.base.life*510,0,this.fade)
				this.layer.rect((max(0,this.life)/this.base.life)*30-30,20,(max(0,this.life)/this.base.life)*60,2+min((max(0,this.life)/this.base.life)*90,6),3)
			}else if(this.collect.life<this.life){
				this.layer.fill(240,0,0,this.fade)
				this.layer.rect((max(0,this.life)/this.base.life)*30-30,20,(max(0,this.life)/this.base.life)*60,2+min((max(0,this.life)/this.base.life)*90,6),3)
				this.layer.fill(min(255,510-max(0,this.collect.life)/this.base.life*510)-max(0,5-max(0,this.collect.life)/this.base.life*30)*25,max(0,this.collect.life)/this.base.life*510,0,this.fade)
				this.layer.rect((max(0,this.collect.life)/this.base.life)*30-30,20,(max(0,this.collect.life)/this.base.life)*60,2+min((max(0,this.collect.life)/this.base.life)*90,6),3)
			}
			if(this.fades.block>0){
				this.layer.fill(0,this.fade*this.fades.block)
				this.layer.ellipse(-30,20,16,16)
				this.layer.fill(150,175,200,this.fade*this.fades.block)
				this.layer.ellipse(-30,20,14,14)
			}
			this.layer.fill(0,this.fade)
			this.layer.textSize(8)
			this.layer.text(max(0,ceil(this.life*10)/10)+"/"+max(0,ceil(this.base.life*10)/10),0,21)
			if(this.fades.block>0){
				this.layer.text(ceil(this.block*10)/10,-30,20)
			}
			this.layer.textSize(10)
			this.layer.text(this.name,0,32)
			if(this.alt==''){
				for(g=0,lg=this.boost.display.length;g<lg;g++){
					this.layer.fill(this.boost.color[this.boost.display[g]][0],this.boost.color[this.boost.display[g]][1],this.boost.color[this.boost.display[g]][2],this.boost.fade[this.boost.display[g]]*this.fade)
					this.layer.ellipse(-21+g*14,50,12,12)
				}
				for(g=0,lg=this.status.display.length;g<lg;g++){
					this.layer.fill(this.status.color[this.status.display[g]][0],this.status.color[this.status.display[g]][1],this.status.color[this.status.display[g]][2],this.status.fade[this.status.display[g]]*this.fade)
					this.layer.ellipse(-21+g*14,64,12,12)
				}
				for(g=0,lg=this.boost.display.length;g<lg;g++){
					this.layer.fill(0,this.boost.fade[this.boost.display[g]]*this.fade)
					if(this.boost[this.boost.display[g]]>0){
						this.layer.text('+'+round(this.boost.main[this.boost.display[g]]),-21+g*14,50)
					}else{
						this.layer.text(round(this.boost.main[this.boost.display[g]]),-21+g*14,50)
					}
				}
				for(g=0,lg=this.status.display.length;g<lg;g++){
					this.layer.fill(0,this.status.fade[this.status.display[g]]*this.fade)
					this.layer.text(round(this.status.main[this.status.display[g]]),-21+g*14,64)
				}
			}else{
				this.layer.text(this.alt,0,40)
				for(g=0,lg=this.boost.display.length;g<lg;g++){
					this.layer.fill(this.boost.color[this.boost.display[g]][0],this.boost.color[this.boost.display[g]][1],this.boost.color[this.boost.display[g]][2],this.boost.fade[this.boost.display[g]]*this.fade)
					this.layer.ellipse(-21+g*14,58,12,12)
				}
				for(g=0,lg=this.status.display.length;g<lg;g++){
					this.layer.fill(this.status.color[this.status.display[g]][0],this.status.color[this.status.display[g]][1],this.status.color[this.status.display[g]][2],this.status.fade[this.status.display[g]]*this.fade)
					this.layer.ellipse(-21+g*14,72,12,12)
				}
				for(g=0,lg=this.boost.display.length;g<lg;g++){
					this.layer.fill(0,this.boost.fade[this.boost.display[g]]*this.fade)
					if(this.boost[this.boost.display[g]]>0){
						this.layer.text('+'+round(this.boost.main[this.boost.display[g]]),-21+g*14,58)
					}else{
						this.layer.text(round(this.boost.main[this.boost.display[g]]),-21+g*14,58)
					}
				}
				for(g=0,lg=this.status.display.length;g<lg;g++){
					this.layer.fill(0,this.status.fade[this.status.display[g]]*this.fade)
					this.layer.text(round(this.status.main[this.status.display[g]]),-21+g*14,72)
				}
			}
			if(this.team==1&&!this.battle.relics.active[132]){
				displayIntent(this.layer,0,-this.height-30,this.fade,1,this.damage[this.intent],this.altAttack[this.intent],this.attacks[this.intent])
				if(this.battle.attack.type==81&&this.battle.hand.trigger){
					displayIntent(this.layer,20,-this.height-50,this.fade,0.5,this.damage[0],this.altAttack[0],this.attacks[0])
				}
			}
			this.layer.translate(-this.base.position.x,-this.base.position.y)
			this.layer.noStroke()
			this.layer.fill(180)
			for(g=0,lg=this.boost.display.length;g<lg;g++){
				if(dist(inputs.rel.x,inputs.rel.y,this.base.position.x-21+g*14,this.base.position.y+58)<7&&this.alt!=''||dist(inputs.rel.x,inputs.rel.y,this.base.position.x-21+g*14,this.base.position.y+50)<7&&this.alt==''){
					this.layer.rect(130,105,240,30,5)
				}
			}
			for(g=0,lg=this.status.display.length;g<lg;g++){
				if(dist(inputs.rel.x,inputs.rel.y,this.base.position.x-21+g*14,this.base.position.y+72)<7&this.alt!=''||dist(inputs.rel.x,inputs.rel.y,this.base.position.x-21+g*14,this.base.position.y+64)<7&&this.alt==''){
					this.layer.rect(130,105,240,30,5)
				}
			}
			this.layer.fill(0)
			this.layer.textSize(12)
			for(g=0,lg=this.boost.display.length;g<lg;g++){
				if(dist(inputs.rel.x,inputs.rel.y,this.base.position.x-21+g*14,this.base.position.y+58)<7&this.alt!=''||dist(inputs.rel.x,inputs.rel.y,this.base.position.x-21+g*14,this.base.position.y+50)<7&&this.alt==''){
					this.layer.text(this.boost.name[this.boost.display[g]],140,105)
					this.layer.text(this.boost.main[this.boost.display[g]],30,105)
				}
			}
			for(g=0,lg=this.status.display.length;g<lg;g++){
				if(dist(inputs.rel.x,inputs.rel.y,this.base.position.x-21+g*14,this.base.position.y+72)<7&this.alt!=''||dist(inputs.rel.x,inputs.rel.y,this.base.position.x-21+g*14,this.base.position.y+64)<7&&this.alt==''){
					this.layer.text(this.status.name[this.status.display[g]],140,105)
					this.layer.text(this.status.main[this.status.display[g]],30,105)
				}
			}
		}
	}
	changeStance(stance){
		if(stance!=this.stance){
			if(this.stance==1){
				this.battle.mana.main+=2
				if(this.battle.relics.active[153]){
					this.battle.mana.main++
				}
			}
			if(stance==3){
				this.battle.mana.main+=3
			}
			if(this.status.main[15]>0){
				this.block+=this.status.main[15]
			}
			if(this.status.main[136]>0){
				this.battle.takeAll(this.status.main[136],-1,1)
			}
			if(this.status.main[137]>0){
				for(g=0;g<this.status.main[137];g++){
					this.battle.draw()
				}
			}
			if(this.status.main[138]>0){
				g=floor(random(0,this.battle.hand.cards.length-1))
				if(this.battle.hand.cards[g].cost>0){
					this.battle.hand.cards[g].cost=max(0,this.battle.hand.cards[g].cost-this.status.main[138])
				}
			}
			for(g=0,lg=this.battle.discard.cards.length;g<lg;g++){
				if(this.battle.discard.cards[g].attack==99){
					this.battle.hand.cards.push(copyCard(this.battle.discard.cards[g]))
					this.battle.hand.cards[this.battle.hand.cards.length-1].position.x=1206
					this.battle.hand.cards[this.battle.hand.cards.length-1].position.y=500
					this.battle.discard.cards.splice(g,1)
					g--
					lg--
				}
			}
			if(stance==1){
				if(this.battle.relics.active[170]){
					this.boost.main[2]++
				}
			}
			if(stance==2){
				if(this.battle.relics.active[169]){
					this.boost.main[0]++
				}
				for(g=0;g<this.status.main[16];g++){
					this.battle.draw()
				}
			}
		}
		this.stance=stance
	}
	orbAttack(damage,user,spec){
		switch(spec){
			case 0:
				for(let h=0,lh=this.battle.combatants.length;h<lh;h++){
					if(this.battle.combatants[h].team==1&&this.battle.combatants[h].life>0){
						this.battle.combatants[h].take(damage*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h].boost.main[4]))*(2+max(0,this.battle.combatants[h].boost.main[4])),user)
						break
					}
				}
			break
			case 1:
				for(let h=0,lh=this.battle.combatants.length;h<lh;h++){
					if(this.battle.combatants[h].team==1&&this.battle.combatants[h].life>0){
						this.battle.combatants[h].take(damage*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h].boost.main[4]))*(2+max(0,this.battle.combatants[h].boost.main[4])),user)
						if(this.battle.combatants[h+1].life>0){
							this.battle.combatants[h+1].take(damage/3*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h+1].boost.main[4]))*(2+max(0,this.battle.combatants[h+1].boost.main[4])),user)
						}
						if(this.battle.combatants[h-1].life>0&&h>1){
							this.battle.combatants[h-1].take(damage/3*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h-1].boost.main[4]))*(2+max(0,this.battle.combatants[h-1].boost.main[4])),user)
						}
						break
					}
				}
			break
			case 2:
				for(let h=0,lh=this.battle.combatants.length;h<lh;h++){
					if(this.battle.combatants[h].team==1&&this.battle.combatants[h].life>0){
						this.battle.combatants[h].take(damage*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h].boost.main[4]))*(2+max(0,this.battle.combatants[h].boost.main[4])),user)
						if(this.battle.combatants[h+1].life>0){
							this.battle.combatants[h+1].take(damage/4*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h+1].boost.main[4]))*(2+max(0,this.battle.combatants[h+1].boost.main[4])),user)
						}
						if(this.battle.combatants[h-1].life>0&&h>1){
							this.battle.combatants[h-1].take(damage/4*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h-1].boost.main[4]))*(2+max(0,this.battle.combatants[h-1].boost.main[4])),user)
						}
						break
					}
				}
			break
			case 3:
				for(let h=0,lh=this.battle.combatants.length;h<lh;h++){
					if(this.battle.combatants[h].team==1&&this.battle.combatants[h].life>0){
						this.battle.attack.attacks.push([5,20,h,damage*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h-1].boost.main[4]))*(2+max(0,this.battle.combatants[h-1].boost.main[4]))])
						break
					}
				}
			break
			case 4:
				for(let h=0,lh=this.battle.combatants.length;h<lh;h++){
					if(this.battle.combatants[h].team==1&&this.battle.combatants[h].life>0){
						this.battle.combatants[h].take(damage*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h].boost.main[4]))*(2+max(0,this.battle.combatants[h].boost.main[4])),user)
						this.battle.attack.attacks.push([0,30,h,damage*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))/(2-min(0,this.battle.combatants[h-1].boost.main[4]))*(2+max(0,this.battle.combatants[h-1].boost.main[4]))])
						break
					}
				}
			break
		}
	}
	evoke(type,detail){
		if(this.battle.relics.active[166]&&floor(random(0,2))){
			this.load(floor(random(0,8)),6)
		}
		if(this.battle.relics.active[173]){
			this.battle.draw()
		}
		switch(type){
			case 0:
				if(this.status.main[142]>0){
					this.orbAttack(12,-1,1)
				}else{
					this.orbAttack(5,-1,0)
				}
			break
			case 1:
				this.orbAttack(6,-1,1)
			break
			case 2:
				this.addBlock(10*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3])))
			break
			case 3:
				this.battle.mana.main+=3
			break
			case 4:
				this.orbAttack(detail,-1,0)
			break
			case 5:
				this.orbAttack(6,-1,0)
			break
			case 6:
				for(h=0;h<3;h++){
					this.battle.draw()
				}
			break
			case 7:
				this.orbAttack(16,-1,0)
			break
			case 8:
				this.addBlock(20*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3])))
			break
			case 9:
				this.life=min(this.life+5*this.battle.random.healEffectiveness,this.base.life)
			break
			case -2:
				this.orbAttack(20,-1,0)
			break
		}
	}
	passiveEvoke(type,detail){
		switch(type){
			case 0:
				if(this.status.main[142]>0){
					this.orbAttack(4,-1,2)
				}else{
					this.orbAttack(2,-1,0)
				}
			break
			case 1:
				this.orbAttack(4,-1,2)
			break
			case 2:
				this.addBlock(2*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3])))
			break
			case 3:
				this.battle.mana.main++
			break
			case 4:
				this.orbAttack(detail/2,-1,0)
			break
			case 5:
				this.orbAttack(2,-1,0)
			break
			case 6:
				this.battle.draw()
			break
			case 7:
				this.orbAttack(6,-1,0)
			break
			case 8:
				this.addBlock(6*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3])))
			break
		}
	}
	autoEvoke(){
		for(g=0;g<this.ammo.length;g++){
			switch(this.ammo[g]){
				case 4:
					this.ammoDetail[g]+=4+this.status.main[140]
				break
				case 5:
					this.orbAttack(3+this.status.main[143],-1,0)
				break
				case 7:
					this.battle.drop.addDrop(findCard('Burn'),0,0)
					this.battle.drop.cards[this.battle.drop.cards.length-1].position.y-=g*100
                    this.battle.reserve.addShuffle(findCard('Burn'),0,0)
				break
				case 8:
					this.battle.combatants[0].block+=4*(2+max(0,this.boost.main[3]))/(2-min(0,this.boost.main[3]))
				break
			}
		}
	}
	cycleCharge(){
		for(g=0,lg=this.ammo.length-1;g<lg;g++){
			this.ammo[g]=this.ammo[g+1]
		}
		this.ammo[this.ammo.length-1]=-1
		for(g=0,lg=this.ammoDetail.length-1;g<lg;g++){
			this.ammoDetail[g]=this.ammoDetail[g+1]
		}
		this.ammoDetail[this.ammoDetail.length-1]=0
	}
	cycleLastCharge(){
		this.ammo[this.ammo.length-1]=-1
		this.ammoDetail[this.ammoDetail.length-1]=0
	}
	clearDebuff(){
		for(g=0,lg=this.boost.main.length;g<lg;g++){
			if(this.boost.main[g]<0){
				this.boost.main[g]=0
			}
		}
		for(g=0,lg=this.status.main.length;g<lg;g++){
			if(this.status.main[g]>0&&this.status.class[g]==0){
				this.status.main[g]=0
			}
		}
	}
	load(type,detail){
		this.battle.random.orbs++
		if(type==2){
			this.battle.random.shields++
		}
		this.loaded=false
		for(h=0,lh=this.ammo.length;h<lh;h++){
			if(this.ammo[h]==-1&&!this.loaded){
				this.ammo[h]=type
				this.ammoDetail[h]=detail
				this.loaded=true
				break
			}
		}
		if(!this.loaded){
			this.evoke(this.ammo[0],this.ammoDetail[0])
			for(h=0,lh=this.ammo.length-1;h<lh;h++){
				this.ammo[h]=this.ammo[h+1]
			}
			this.ammo[this.ammo.length-1]=type
			for(h=0,lh=this.ammoDetail.length-1;h<lh;h++){
				this.ammoDetail[h]=this.ammoDetail[h+1]
			}
			this.ammoDetail[this.ammoDetail.length-1]=detail
		}
	}
	addBlock(value){
		if(value>0){
			this.calc.block=value
			if(this.status.main[59]>0){
				this.calc.block*=1.5
				this.status.main[59]--
			}
			if(this.status.main[131]>0){
				this.calc.block*=3
				this.status.main[131]--
			}
			if(this.status.main[64]<=0){
				this.block+=this.calc.block
			}
			if(this.status.main[97]>0){
				this.combo+=this.status.main[97]
			}
			if(this.status.main[126]>0){
				this.battle.takeAll(this.status.main[126],-1,1)
			}
			if(this.status.main[132]>0){
				this.orbAttack(this.calc.block,-1,0)
				this.status.main[132]--
			}
		}
	}
	take(damage,user,extra){
		if(this.life>0&&damage>0){
			if(user>=0&&this.status.main[10]>0){
				this.status.main[10]--
				this.battle.combatants[user].take(damage,this.id)
			}else if(this.status.main[107]>0){
				this.status.main[107]=0
				this.life=min(this.life+damage*this.battle.random.healEffectiveness,this.base.life)
			}else if(this.status.main[6]>0){
				this.status.main[6]--
			}else if(this.status.main[33]>0){
				this.status.main[33]--
			}else{
				this.calc.damage=damage
				if(user>=0&&this.battle.combatants[user].status.main[2]>0){
					this.battle.combatants[user].status.main[2]--
					this.calc.damage*=2
				}
				if(user>=0&&this.battle.combatants[user].status.main[121]>0){
					this.calc.damage*=2
				}
				if(this.status.main[12]>0&&this.calc.damage>1){
					this.calc.damage=1
				}
				if(this.battle.combatants[0].stance==2){
					if(this.id>0&&this.battle.relics.active[100]){
						this.calc.damage*=3
					}else{
						this.calc.damage*=2
					}
				}
				if(this.battle.combatants[0].stance==3&&this.id>0){
					if(this.battle.relics.active[100]){
						this.calc.damage*=4
					}else{
						this.calc.damage*=3
					}
				}
				if(this.block>0){
					this.calc.damage*=(2-min(0,this.boost.main[2]))/(2+max(0,this.boost.main[2]))
				}else{
					if(this.battle.relics.active[60]){
						this.calc.damage*=(2-min(0,this.boost.main[1]*1.5))/(2+max(0,this.boost.main[1]))
					}else{
						this.calc.damage*=(2-min(0,this.boost.main[1]))/(2+max(0,this.boost.main[1]))
					}
				}
				if(user>=0&&this.battle.combatants[user].status.main[25]>0){
					this.status.main[11]+=this.battle.combatants[user].status.main[25]
				}
				if(user>=0&&this.battle.combatants[user].status.main[41]>0){
					this.status.main[11]+=this.battle.combatants[user].status.main[41]
					this.battle.combatants[user].status.main[41]=0
				}
				if(user>=0&&this.battle.combatants[user].status.main[144]>0){
					this.status.main[11]+=this.battle.combatants[user].status.main[144]
				}
				if(extra==1){
					this.calc.damage+=this.battle.combatants[user].status.main[26]
				}
				if(this.id>0&&user==0){
					if(this.battle.combatants[user].status.main[30]>0){
						this.calc.damage+=this.battle.combatants[user].status.main[30]
						this.battle.combatants[user].status.main[30]=0
					}
					if(this.battle.relics.active[27]&&this.calc.damage<5){
						this.calc.damage=5
					}
					if(this.battle.combatants[0].status.main[103]>0&&this.battle.combatants[1].built==0){
						this.battle.combatants[1].life=min(this.battle.combatants[1].life+this.battle.combatants[0].status.main[103],this.battle.combatants[1].base.life)
					}
					if(this.battle.combatants[0].status.main[71]>0){
						this.battle.combatants[0].status.main[71]--
					}
					if(this.battle.combatants[0].status.main[72]>0&&this.life<=this.base.life*3/4){
						this.battle.combatants[0].status.main[72]--
						this.battle.mana.gen++
					}
					for(let g=0,lg=this.battle.hand.cards.length;g<lg;g++){
						if(this.battle.hand.cards[g].attack==-20){
							this.battle.combatants[0].take(1,-1)
						}
					}
				}
				if(this.id>0&&this.battle.relics.active[177]&&user==-1&&this.block<=0){
					this.calc.damage+=2
				}
				if(this.id==0){
					this.battle.random.taken++
					if(this.battle.relics.active[11]&&user>0){
						this.battle.combatants[user].take(3,-1)
					}
					if(this.battle.relics.active[12]&&this.battle.random.taken==1){
						for(g=0;g<3;g++){
							this.battle.draw()
						}
					}
					if(this.battle.relics.active[61]){
						this.status.main[31]+=3
					}
					if(this.battle.relics.active[64]){
						this.combo++
					}
					if(this.battle.relics.active[90]&&this.calc.damage<=5){
						this.calc.damage=1
					}
					if(this.battle.relics.active[91]){
						this.calc.damage=max(0,this.calc.damage-1)
					}
					if(this.battle.relics.active[145]){
						this.battle.draw()
					}
					if(this.type==3&&this.battle.relics.active[154]){
						this.passiveEvoke(this.ammo[0],this.ammoDetail[0])
					}
				}
				if(this.status.main[106]>0){
					this.status.main[106]=0
					this.calc.damage*=2
				}
				if(this.status.main[34]>0&&this.calc.damage>1){
					this.calc.damage=1
				}
				if(user>=0&&this.battle.combatants[user].status.main[62]>0){
					this.calc.damage=max(0,this.calc.damage-this.battle.combatants[user].status.main[62])
				}
				if(user>=0&&this.battle.combatants[user].status.main[87]>0){
					this.calc.damage=max(0,this.calc.damage+this.battle.combatants[user].status.main[87])
				}
				if(user>=0&&this.battle.combatants[user].status.main[98]>0){
					this.calc.damage=max(0,this.calc.damage-this.battle.combatants[user].status.main[98])
				}
				this.battle.particles.push(new particle(this.layer,this.position.x,this.position.y-this.height/2,0,random(0,360),3,2,[255,0,0]))
				this.battle.particles[this.battle.particles.length-1].text=round(this.calc.damage*10)/10
				if(this.block>this.calc.damage&&extra!=1){
					this.block-=this.calc.damage
					this.blocked=0
				}else if(this.block>0&&extra!=1){
					this.calc.damage-=this.block
					this.block=0
					this.life-=this.calc.damage
					if(this.id>0&&this.battle.relics.active[106]){
						this.boost.main[1]-=2
					}
					this.blocked=1
				}else{
					this.life-=this.calc.damage
					this.blocked=2
				}
				if(this.id==0&&(this.blocked==1||this.blocked==2)){
					this.battle.counter.taken+=this.calc.damage
					this.battle.random.hits++
					if(this.status.main[81]>0){
						this.load(4,6)
					}
					if(this.flower>=4){
						this.flower-=4
						this.boost.main[1]+=2
						this.boost.main[2]+=2
						this.status.main[6]++
						this.battle.mana.main++
						this.battle.mana.max++
						this.battle.mana.gen++
					}else if(this.flower>0){
						this.flower--
					}
					if(this.battle.relics.active[163]){
						this.battle.currency.money+=5
					}
				}else if(this.id==0&&this.blocked==0){
					this.flower+=this.status.main[85]
				}
				if(this.status.main[29]>0){
					this.status.main[1]++
				}
				if(this.status.main[35]>0){
					this.status.main[35]--
				}
				if(this.status.main[35]>0&&this.blocked!=0){
					this.boost.main[0]++
					this.status.main[1]++
				}
				if(this.status.main[155]>0){
					this.status.main[155]--
				}
				if(this.status.main[56]>0){
					this.load(5,0)
				}
				if(this.status.main[127]>0){
					for(g=0;g<this.status.main[127];g++){
						this.battle.hand.add(findCard('Shiv'),0,0)
					}
				}
				if(user>=0&&this.status.main[77]>0){
					this.battle.combatants[user].addBlock(this.status.main[77])
				}
				if(user>=0&&this.status.main[45]>0){
					this.battle.combatants[user].take(this.status.main[45],this.id)
                    this.battle.attack.attacks.push([0,20,user,this.status.main[45]])
				}
				if(this.id>0&&user==0){
					this.battle.combatants[0].combo+=1+this.battle.combatants[0].status.main[95]
				}
			}
		}
		if(this.life>0){
			if(user>=0&&this.status.main[0]>0){
				this.battle.combatants[user].take(this.status.main[0],this.id)
			}
			if(user>=0&&this.status.main[3]>0){
				this.remember.int=this.status.main[3]
				this.status.main[3]=0
				this.battle.combatants[user].take(this.remember.int,this.id)
			}
			if(this.status.main[13]>0){
				this.status.main[4]++
			}
			if(this.status.main[27]>0){
				this.remember.int=this.status.main[27]
				this.status.main[27]=0
				if(user>=0&&this.battle.combatants[user].block<=0){
					this.battle.combatants[user].status.main[11]+=this.remember.int
				}
			}
			if(this.status.main[146]>0){
				this.status.main[4]++
			}
			if(user>=0&&this.status.main[28]>0){
				this.remember.int=this.status.main[28]
				this.status.main[28]=0
				this.battle.attack.attacks.push([5,20,user,this.remember.int])
			}
			if(user>=0&&this.status.main[65]>0){
				this.remember.int=this.status.main[65]
				this.status.main[65]=0
				this.battle.attack.attacks.push([11,20,user,this.remember.int])
			}
			if(user>=0&&this.status.main[43]>0){
				this.battle.combatants[user].status.main[44]+=this.status.main[43]
			}
			if(user>=0&&this.status.main[66]>0){
				this.battle.combatants[user].status.main[67]+=this.status.main[66]
			}
			if(user>=0&&this.status.main[83]>0){
				this.battle.combatants[user].status.main[44]+=this.status.main[83]
				this.status.main[83]=0
			}
			if(user>=0&&this.status.main[94]>0){
				this.remember.int=this.status.main[94]
				this.status.main[3]+=this.status.main[94]
				this.status.main[94]=0
				this.battle.combatants[user].take(this.remember.int,this.id)
			}
			if(user>=0&&this.status.main[105]>0){
				this.battle.combatants[user].status.main[104]+=this.status.main[105]
			}
			if(user>=0&&this.status.main[116]>0){
				this.battle.combatants[user].take(this.status.main[116],this.id)
			}
		}
	}
    update(){
		this.boost.display=[]
		this.status.display=[]
		this.uniqueDisplay=[]
		if(this.block>this.collect.block&&this.id==0){
			this.collect.block=this.block
			for(g=0,lg=this.battle.combatants.length;g<lg;g++){
				if(this.battle.combatants[g].team==1){
					this.battle.combatants[g].boost.main[0]-=this.status.main[17]
				}
			}
		}else if(this.block<this.collect.block&&this.id==0){
			this.collect.block=this.block
		}
		if(this.id==0){
			if(this.battle.relics.active[157]&&this.base.life>this.life){
				this.base.life=this.life
			}
			if(this.combo!=0&&this.battle.hand.anim.selectCombo||this.type==1){
				this.uniqueDisplay.push(0)
			}
			if(this.ammo[0]!=-1||this.type==3){
				this.uniqueDisplay.push(1)
			}
			if(this.meter!=0||this.type==4){
				this.uniqueDisplay.push(2)
			}
			if(this.mantra>=12&&this.stance!=3){
				this.changeStance(3)
				this.mantra-=12
			}
			if(this.meter<-this.base.meter){
				this.meter=0
				if(this.status.main[82]>0){
					this.status.main[82]--
					if(this.battle.relics.active[67]){
						this.status.main[2]+=3
					}else{
						this.status.main[2]+=2
					}
				}else{
					if(this.battle.relics.active[67]){
						this.status.main[2]+=2
					}else{
						this.status.main[2]++
					}
				}
				if(this.battle.relics.active[155]){
					this.battle.mana.main++
				}
				if(this.battle.relics.active[121]){
					for(g=0,lg=this.battle.combatants.length;g<lg;g++){
						if(this.battle.combatants[g].team==1){
							this.battle.combatants[g].take(10,0)
						}
					}
				}
			}else if(this.meter>this.base.meter){
				this.meter=0
				if(this.status.main[82]>0){
					if(this.battle.relics.active[67]){
						this.battle.mana.main+=3
					}else{
						this.battle.mana.main+=2
					}
				}else{
					if(this.battle.relics.active[67]){
						this.battle.mana.main+=2
					}else{
						this.battle.mana.main++
					}
				}
				if(this.battle.relics.active[155]){
					this.status.main[2]++
				}
				if(this.battle.relics.active[121]){
					for(g=0,lg=this.battle.combatants.length;g<lg;g++){
						if(this.battle.combatants[g].team==1){
							this.battle.combatants[g].take(10,0)
						}
					}
				}
			}
			if(this.status.main[147]>0&&this.armed==0){
				this.armed=1
			}
			if(this.status.main[148]>0&&this.armed==1){
				this.status.main[148]--
				this.armed=0
				this.orbAttack(10,-1,0)
			}
		}else if(this.id==1){
			if(this.built==1&&this.life<=0&&this.fade<=0){
				this.built=0
			}else if(this.built==0&&this.life>=this.base.life){
				this.built=1
			}
		}
		for(g=0,lg=this.boost.main.length;g<lg;g++){
			if(this.status.main[36]>0&&this.boost.main[g]<0){
				this.boost.main[g]=0
				this.status.main[36]--
			}
			if(this.status.main[133]>0&&this.boost.main[g]>0){
				this.boost.main[g]=0
				this.status.main[133]--
			}
			if(this.boost.fade[g]!=0){
				this.boost.display.push(g)
			}
			if(this.boost.fade[g]<1&&this.boost.main[g]!=0){
				this.boost.fade[g]=round(this.boost.fade[g]*10+1)/10
			}
			if(this.boost.fade[g]>0&&this.boost.main[g]==0){
				this.boost.fade[g]=round(this.boost.fade[g]*10-1)/10
			}
			if(this.team==0){
				this.boost.main[g]=max(this.boost.main[g],-6)
			}else if(this.team==1){
				this.boost.main[g]=min(this.boost.main[g],6)
			}
		}
		for(g=0,lg=this.status.main.length;g<lg;g++){
			if(this.status.main[36]>0&&this.status.main[g]>0&&this.status.class[g]==0){
				this.status.main[g]=0
				this.status.main[36]--
			}
			if(this.status.main[133]>0&&this.status.main[g]>0&&this.status.class[g]==1){
				this.status.main[g]=0
				this.status.main[133]--
			}
			if(this.status.fade[g]!=0){
				this.status.display.push(g)
			}
			if(this.status.fade[g]<1&&this.status.main[g]!=0){
				this.status.fade[g]=round(this.status.fade[g]*5+1)/5
			}
			if(this.status.fade[g]>0&&this.status.main[g]==0){
				this.status.fade[g]=round(this.status.fade[g]*5-1)/5
			}
		}
		this.collect.life=this.collect.life*0.9+this.life*0.1
		if(this.fades.block<1&&this.block>0){
			this.fades.block=round(this.fades.block*5+1)/5
		}else if(this.fades.block>0&&this.block<=0){
			this.fades.block=round(this.fades.block*5-1)/5
		}
		if(this.fade<1&&(this.life>0||this.id==1&&this.type>0&&this.built==0)){
			this.fade=round(this.fade*5+1)/5
		}else if(this.fade>0&&!(this.life>0||this.id==1&&this.type>0&&this.built==0)){
			this.fade=round(this.fade*5-1)/5
		}
		if(this.battle.relics.active[174]&&this.name.includes('Duck')){
			this.life=0
		}
		if(this.life<=0&&this.type!=0&&this.id!=1){
			if(this.id==0&&this.status.main[134]>0){
				this.life=1
			}else if(this.id==0&&this.battle.relics.active[81]){
				this.battle.relics.active[81]=false
				this.life=this.base.life/2
			}else if(this.id==0){
				for(g=0,lg=this.battle.potions.owned.length;g<lg;g++){
					if(this.battle.potions.owned[g]==30){
						this.life=this.base.life/10*this.battle.random.potionEffectiveness
						this.battle.potions.owned[g]=-1
					}
				}
				if(this.life<=0){
					this.type=0
				}
			}else{
				this.type=0
				this.battle.counter.enemies.dead++
				if(this.battle.relics.active[44]){
					this.battle.mana.main++
					this.battle.draw()
				}
				if(this.battle.relics.active[152]){
					this.battle.combatants[0].combo*=2
				}
				if(this.battle.relics.active[168]){
					this.battle.combatants[0].life=min(this.battle.combatants[0].life+4*this.battle.random.healEffectiveness,this.battle.combatants[0].base.life)
				}
				if(this.battle.combatants[0].status.main[48]>0){
					this.battle.combatants[0].life=min(this.battle.combatants[0].life+this.battle.combatants[0].status.main[48]*this.battle.random.healEffectiveness,this.battle.combatants[0].base.life)
				}
				if(this.status.main[120]>0){
					this.battle.takeAll(this.base.life,this.id,1)
				}
				if(this.status.main[156]>0){
					this.battle.currency.money+=this.status.main[156]
				}
				if(this.name=='Big Slime'){
					this.battle.quickReinforce(findCombatant('Slime'))
					this.battle.quickReinforce(findCombatant('Slime'))
					this.battle.end=false
				}
				if(this.name=='Big Spike Slime'){
					this.battle.quickReinforce(findCombatant('Spike Slime'))
					this.battle.quickReinforce(findCombatant('Spike Slime'))
					this.battle.end=false
				}
				if(this.name=='Big Slimoid'){
					this.battle.quickReinforce(findCombatant('Slimoid'))
					this.battle.quickReinforce(findCombatant('Slimoid'))
					this.battle.end=false
				}
				if(this.name=='Personnel Carrier'){
					for(let g=0;g<4;g++){
						this.battle.quickReinforce(findCombatant('Management Robot'))
					}
					this.battle.end=false
				}
			}
		}
	}
}