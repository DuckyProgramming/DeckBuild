class combatant{
    constructor(layer,x,y,type,team){
        this.layer=layer
        this.position={x:x,y:y}
        this.type=type
        this.team=team
        this.size=1
		this.flip=1-this.team*2
		this.direction=0
        this.name=types.combatant[this.type].name
        this.alt=types.combatant[this.type].alt
        this.life=types.combatant[this.type].life
        this.base={life:this.life}
        this.collect={life:this.life}
        if(this.type==0){
            this.fade=0
        }else{
            this.fade=1
        }
    }
    display(){
        this.layer.translate(this.position.x,this.position.y)
        this.layer.rotate(this.direction)
        this.layer.scale(this.size*this.flip,this.size)
        switch(this.type){
            case 1: case 2:
				this.layer.stroke(80,this.fade)
				this.layer.strokeWeight(4)
				this.layer.line(-4,-30,-8,0)
				this.layer.line(4,-30,8,0)
				this.layer.line(-6,-48,-15,-24)
				this.layer.line(6,-48,15,-24)
				this.layer.noStroke()
				this.layer.fill(80,this.fade)
				this.layer.ellipse(0,-45,18,36)
				this.layer.fill(240,220,180,this.fade)
				this.layer.ellipse(0,-75,30,30)
				this.layer.fill(0,this.fade)
				this.layer.ellipse(4,-72,4,4)
				this.layer.ellipse(12,-72,4,4)
			break
        }
        this.layer.scale(1/this.size/this.flip,1/this.size)
        this.layer.rotate(-this.direction)
        this.layer.translate(-this.position.x,-this.position.y)
    }
    displayInfo(){
        this.layer.translate(this.position.x,this.position.y)
        this.layer.noStroke()
		this.layer.fill(0,this.fade)
		this.layer.rect(0,20,62,10,4)
		this.layer.fill(150,this.fade)
		this.layer.rect(0,20,60,8,3)
		if(this.collect.life>=this.life){
			this.layer.fill(240,0,0,this.fade)
			this.layer.rect((max(0,this.collect.life)/this.base.life)*30-30,20,(max(0,this.collect.life)/this.base.life)*60,2+min((max(0,this.collect.life)/this.base.life)*90,6),3)
			this.layer.fill(min(255,510-max(0,this.life)/this.base.life*510)-max(0,5-max(0,this.life)/this.base.life*30)*25,max(0,this.life)/this.base.life*510,0,this.fade)
			this.layer.rect((max(0,this.life)/this.base.life)*30-30,20,(max(0,this.life)/this.base.life)*60,2+min((max(0,this.life)/this.base.life)*90,6),3)
        }else if(this.collect.life<this.life){
			this.layer.fill(240,0,0,this.fade)
			this.layer.rect((max(0,this.life)/this.base.life)*30-30,20,(max(0,this.life)/this.base.life)*60,2+min((max(0,this.life)/this.base.life)*90,6),3)
			this.layer.fill(min(255,510-max(0,this.collect.life)/this.base.life*510)-max(0,5-max(0,this.collect.life)/this.base.life*30)*25,max(0,this.collect.life)/this.base.life*510,0,this.fade)
			this.layer.rect((max(0,this.collect.life)/this.base.life)*30-30,20,(max(0,this.collect.life)/this.base.life)*60,2+min((max(0,this.collect.life)/this.base.life)*90,6),3)
		}
        if(this.alt==''){
			this.layer.fill(0,this.fade)
			this.layer.textSize(8)
			this.layer.text(max(0,ceil(this.life*10)/10)+"/"+max(0,ceil(this.base.life)),0,21)
			this.layer.textSize(10)
			this.layer.text(this.name,0,32)
		}else{
			this.layer.fill(0,this.fade)
			this.layer.textSize(8)
			this.layer.text(max(0,ceil(this.life*10)/10)+"/"+max(0,ceil(this.base.life)),0,21)
			this.layer.textSize(10)
			this.layer.text(this.name,0,32)
			this.layer.text(this.alt,0,40)
		}
        this.layer.translate(-this.position.x,-this.position.y)
    }
    update(){
    }
}